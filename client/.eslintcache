[{"D:\\NBP_NEO4J\\client\\src\\index.js":"1","D:\\NBP_NEO4J\\client\\src\\App.js":"2","D:\\NBP_NEO4J\\client\\src\\store.js":"3","D:\\NBP_NEO4J\\client\\src\\components\\auth\\Register.js":"4","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluga.js":"5","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterOrdinacija.js":"6","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterStudent.js":"7","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Poruke.js":"8","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\ZubarPogled.js":"9","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\ZahteviStudenata.js":"10","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Komentari.js":"11","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\KorisnikPogled.js":"12","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\StudentPogled.js":"13","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\TerminiZubar.js":"14","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UrediProfil.js":"15","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Forum.js":"16","D:\\NBP_NEO4J\\client\\src\\components\\auth\\Login.js":"17","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Zubar.js":"18","D:\\NBP_NEO4J\\client\\src\\components\\forum\\DodajTemu.js":"19","D:\\NBP_NEO4J\\client\\src\\components\\forum\\Tema.js":"20","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluge.js":"21","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Notification.js":"22","D:\\NBP_NEO4J\\client\\src\\actions\\types.js":"23","D:\\NBP_NEO4J\\client\\src\\actions\\auth.js":"24","D:\\NBP_NEO4J\\client\\src\\components\\forum\\Dashboard.js":"25","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarKorisnik.js":"26","D:\\NBP_NEO4J\\client\\src\\components\\forum\\FormaDodaj.js":"27","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarPageZubar.js":"28","D:\\NBP_NEO4J\\client\\src\\components\\forum\\PrikaziTemu.js":"29","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UslugeDashboard.js":"30","D:\\NBP_NEO4J\\client\\src\\reducers\\index.js":"31","D:\\NBP_NEO4J\\client\\src\\reducers\\dashboard.js":"32","D:\\NBP_NEO4J\\client\\src\\reducers\\auth.js":"33"},{"size":297,"mtime":1611223975601,"results":"34","hashOfConfig":"35"},{"size":3450,"mtime":1612208887188,"results":"36","hashOfConfig":"35"},{"size":985,"mtime":1611248946790,"results":"37","hashOfConfig":"35"},{"size":8574,"mtime":1611219279953,"results":"38","hashOfConfig":"35"},{"size":3733,"mtime":1611780660542,"results":"39","hashOfConfig":"35"},{"size":1886,"mtime":1611242598689,"results":"40","hashOfConfig":"35"},{"size":3195,"mtime":1611242388145,"results":"41","hashOfConfig":"35"},{"size":1403,"mtime":1612017641885,"results":"42","hashOfConfig":"35"},{"size":1731,"mtime":1611775892635,"results":"43","hashOfConfig":"35"},{"size":319,"mtime":1612008509744,"results":"44","hashOfConfig":"35"},{"size":1356,"mtime":1612022019257,"results":"45","hashOfConfig":"35"},{"size":935,"mtime":1612011508729,"results":"46","hashOfConfig":"35"},{"size":1735,"mtime":1612021161333,"results":"47","hashOfConfig":"35"},{"size":5832,"mtime":1612023412376,"results":"48","hashOfConfig":"35"},{"size":1811,"mtime":1611957296632,"results":"49","hashOfConfig":"35"},{"size":608,"mtime":1612207862217,"results":"50","hashOfConfig":"35"},{"size":2060,"mtime":1612207862216,"results":"51","hashOfConfig":"35"},{"size":3283,"mtime":1612207862219,"results":"52","hashOfConfig":"35"},{"size":369,"mtime":1612207862220,"results":"53","hashOfConfig":"35"},{"size":388,"mtime":1612207862222,"results":"54","hashOfConfig":"35"},{"size":854,"mtime":1612207862218,"results":"55","hashOfConfig":"35"},{"size":2075,"mtime":1612022220360,"results":"56","hashOfConfig":"35"},{"size":745,"mtime":1611325089644,"results":"57","hashOfConfig":"35"},{"size":1474,"mtime":1612207862214,"results":"58","hashOfConfig":"35"},{"size":4698,"mtime":1612207862220,"results":"59","hashOfConfig":"35"},{"size":2706,"mtime":1612207862217,"results":"60","hashOfConfig":"35"},{"size":3684,"mtime":1612207862220,"results":"61","hashOfConfig":"35"},{"size":5618,"mtime":1612207862218,"results":"62","hashOfConfig":"35"},{"size":5568,"mtime":1612207862221,"results":"63","hashOfConfig":"35"},{"size":2248,"mtime":1612207862219,"results":"64","hashOfConfig":"35"},{"size":164,"mtime":1611253374828,"results":"65","hashOfConfig":"35"},{"size":1174,"mtime":1611325150452,"results":"66","hashOfConfig":"35"},{"size":1130,"mtime":1611253314825,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1yczhg4",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\NBP_NEO4J\\client\\src\\index.js",[],["154","155"],"D:\\NBP_NEO4J\\client\\src\\App.js",[],"D:\\NBP_NEO4J\\client\\src\\store.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\auth\\Register.js",["156","157","158","159","160"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\nimport { json } from 'body-parser';\r\n\r\nconst Register = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    imeZ: '',\r\n    prezimeZ: '',\r\n    gradZ: '',\r\n    telefonZ: '',\r\n    usernameZ: '',\r\n    sifraZ: '',\r\n    imeK: '',\r\n    prezimeK: '',\r\n    telefonK: '',\r\n    usernameK: '',\r\n    sifraK: '',\r\n  });\r\n\r\n  const {\r\n    imeZ,\r\n    prezimeZ,\r\n    gradZ,\r\n    telefonZ,\r\n    usernameZ,\r\n    sifraZ,\r\n    imeK,\r\n    prezimeK,\r\n    telefonK,\r\n    usernameK,\r\n    sifraK,\r\n  } = formData;\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime: imeZ,\r\n      prezime: prezimeZ,\r\n      grad: gradZ,\r\n      telefon: telefonZ,\r\n      username: usernameZ,\r\n      sifra: sifraZ,\r\n    };\r\n    registracija(zaSlanje, 'Zubar');\r\n    history.push('/');\r\n  };\r\n\r\n  const onSubmitK = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime: imeK,\r\n      prezime: prezimeK,\r\n      telefon: telefonK,\r\n      username: usernameK,\r\n      sifra: sifraK,\r\n    };\r\n    registracija(zaSlanje, 'Korisnik');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className='terza'>\r\n      <div className='login-wrap'>\r\n        <div className='login-html'>\r\n          <input id='tab-1' type='radio' name='tab' className='sign-in' />\r\n          <label for='tab-1' className='tab'>\r\n            Zubar\r\n          </label>\r\n          <input id='tab-2' type='radio' name='tab' className='sign-up' />\r\n          <label for='tab-2' className='tab'>\r\n            Korisnik\r\n          </label>\r\n          <div className='login-form'>\r\n            <form onSubmit={onSubmit}>\r\n              <div className='sign-in-htm'>\r\n                <div className='group'>\r\n                  <label for='imeZubara' className='label'>\r\n                    Ime\r\n                  </label>\r\n                  <input\r\n                    id='imeZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='imeZ'\r\n                    value={imeZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='prezimeZubara' className='label'>\r\n                    Prezime\r\n                  </label>\r\n                  <input\r\n                    id='prezimeZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='prezimeZ'\r\n                    value={prezimeZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='gradZubara' className='label'>\r\n                    Grad\r\n                  </label>\r\n                  <input\r\n                    id='gradZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='gradZ'\r\n                    value={gradZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='telefonZubara' className='label'>\r\n                    Telefon\r\n                  </label>\r\n                  <input\r\n                    id='telefonZubara'\r\n                    type='number'\r\n                    className='input'\r\n                    name='telefonZ'\r\n                    value={telefonZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='usernameZubara' className='label'>\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    id='username'\r\n                    type='text'\r\n                    className='input'\r\n                    name='usernameZ'\r\n                    value={usernameZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='sifraZubara' className='label'>\r\n                    Sirfa\r\n                  </label>\r\n                  <input\r\n                    id='sifraZubara'\r\n                    type='password'\r\n                    className='input'\r\n                    name='sifraZ'\r\n                    value={sifraZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button'\r\n                    value='Registruj se'\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button1'\r\n                    value='Kreiraj ordinaciju'\r\n                    onClick={() => history.push('/register/ordinacija')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form onSubmit={onSubmitK}>\r\n              <div className='sign-up-htm'>\r\n                <div className='group'>\r\n                  <label for='imeKorisnika' className='label'>\r\n                    Ime\r\n                  </label>\r\n                  <input\r\n                    id='imeKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='imeK'\r\n                    value={imeK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='prezimeKorisnika' className='label'>\r\n                    Prezime\r\n                  </label>\r\n                  <input\r\n                    id='prezimeKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='prezimeK'\r\n                    value={prezimeK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='telefonKorisnika' className='label'>\r\n                    Telefon\r\n                  </label>\r\n                  <input\r\n                    id='telefonKorisnika'\r\n                    type='munber'\r\n                    className='input'\r\n                    name='telefonK'\r\n                    value={telefonK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='usernameKorisnika' className='label'>\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    id='usernameKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='usernameK'\r\n                    value={usernameK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='sifraKorisnika' className='label'>\r\n                    Sifra\r\n                  </label>\r\n                  <input\r\n                    id='sifraKorisnika'\r\n                    type='password'\r\n                    className='input'\r\n                    name='sifraK'\r\n                    value={sifraK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button'\r\n                    value='Registruj se'\r\n                  />\r\n                </div>\r\n\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button1'\r\n                    value='Student si?'\r\n                    onClick={() => history.push('/register/student')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(Register);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluga.js",["161","162"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBBadge,\r\n} from 'mdbreact';\r\n\r\nconst Usluga = (props) => {\r\n  const [uslugaPodaci, setUslugaPodaci] = useState({\r\n    naziv: '',\r\n    cena: '',\r\n    opis: '',\r\n  });\r\n  const [usluge, setUsluge] = useState([]);\r\n  useEffect(async () => {\r\n    const res = await axios.get(\r\n      `/vratiUslugeZubara/${props.match.params.username}`\r\n    );\r\n    setUsluge(res.data);\r\n  }, []);\r\n\r\n  const { naziv, cena, opis } = uslugaPodaci;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username: props.match.params.username,\r\n      naziv,\r\n      cena,\r\n      opis,\r\n    };\r\n\r\n    await axios.put('/novaUsluga', zaSlanje);\r\n    window.location.reload();\r\n  };\r\n  const onChange = (e) =>\r\n    setUslugaPodaci({ ...uslugaPodaci, [e.target.name]: e.target.value });\r\n  const klik = async (ind) => {\r\n    await axios.put('/obrisiUslugu', {\r\n      usernameZubara: props.match.params.username,\r\n      nazivUsluge: usluge[ind].naziv,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <MDBContainer className='terza5'>\r\n      <MDBRow>\r\n        <MDBCol md='6'>\r\n          <form onSubmit={onSubmit}>\r\n            <p className='h4 text-center mb-4'>Dodaj novu uslugu</p>\r\n            <label htmlFor='defaultFormContactNameEx' className='grey-text'>\r\n              Naziv usluge\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id='defaultFormContactNameEx'\r\n              className='form-control'\r\n              name='naziv'\r\n              value={naziv}\r\n              onChange={onChange}\r\n            />\r\n            <br />\r\n            <label htmlFor='defaultFormContactEmailEx' className='grey-text'>\r\n              Cena\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id='defaultFormContactEmailEx'\r\n              className='form-control'\r\n              name='cena'\r\n              value={cena}\r\n              onChange={onChange}\r\n            />\r\n            <br />\r\n            <label htmlFor='defaultFormContactMessageEx' className='grey-text'>\r\n              Opis\r\n            </label>\r\n            <textarea\r\n              type='text'\r\n              id='defaultFormContactMessageEx'\r\n              className='form-control'\r\n              rows='3'\r\n              name='opis'\r\n              value={opis}\r\n              onChange={onChange}\r\n            />\r\n            <div className='text-center mt-4'>\r\n              <MDBBtn color='warning' outline type='submit'>\r\n                Dodaj\r\n                <MDBIcon far icon='paper-plane' className='ml-2' />\r\n              </MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n        <MDBCol md='6' className='terza6'>\r\n          <p className='h4  mb-4'>Lista usluga koje nudim</p>\r\n          <MDBListGroup className='terzinjo' style={{ width: '31rem' }}>\r\n            {usluge.map((usl, index) => (\r\n              <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\r\n                {usl.naziv}\r\n                <MDBBadge color='primary' pill>\r\n                  {usl.cena}\r\n                  <MDBBtn\r\n                    id={usl.naziv}\r\n                    onClick={() => klik(index)}\r\n                    size='sm'\r\n                    gradient='peach'\r\n                  >\r\n                    Brisi\r\n                  </MDBBtn>\r\n                </MDBBadge>\r\n              </MDBListGroupItem>\r\n            ))}\r\n          </MDBListGroup>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default Usluga;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterOrdinacija.js",["163"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\n\r\nconst RegisterOrdinacija = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    ime: '',\r\n    grad: '',\r\n    adresa: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const { ime, grad, adresa } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime,\r\n      grad,\r\n      adresa,\r\n    };\r\n    registracija(zaSlanje, 'Ordinacija');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Register</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='ime'\r\n            placeholder='Ime'\r\n            required='required'\r\n            value={ime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='grad'\r\n            placeholder='Grad'\r\n            required='required'\r\n            value={grad}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='adresa'\r\n            placeholder='Adresa'\r\n            required='required'\r\n            value={adresa}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Registruj ordinaciju\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegisterOrdinacija.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(RegisterOrdinacija);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterStudent.js",["164"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\n\r\nconst RegisterStudent = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n    ime: '',\r\n    prezime: '',\r\n    grad: '',\r\n    telefon: '',\r\n    godina: '',\r\n    prosek: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    username,\r\n    sifra,\r\n    ime,\r\n    prezime,\r\n    grad,\r\n    telefon,\r\n    godina,\r\n    prosek,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n      ime,\r\n      prezime,\r\n      grad,\r\n      telefon,\r\n      godina,\r\n      prosek,\r\n    };\r\n    registracija(zaSlanje, 'Student');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Register</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='username'\r\n            placeholder='Username'\r\n            required='required'\r\n            value={username}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='password'\r\n            name='sifra'\r\n            placeholder='Password'\r\n            required='required'\r\n            value={sifra}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='ime'\r\n            placeholder='Ime'\r\n            required='required'\r\n            value={ime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='prezime'\r\n            placeholder='Prezime'\r\n            required='required'\r\n            value={prezime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='grad'\r\n            placeholder='Grad'\r\n            required='required'\r\n            value={grad}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='telefon'\r\n            placeholder='Telefon'\r\n            required='required'\r\n            value={telefon}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='godina'\r\n            placeholder='Godina'\r\n            required='required'\r\n            value={godina}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='prosek'\r\n            placeholder='Prosek'\r\n            required='required'\r\n            value={prosek}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Registruj se\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegisterStudent.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(RegisterStudent);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Poruke.js",["165"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\n\r\nconst Poruke = (props) => {\r\n  const [poruke, setPoruke] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`/vratiPrivatnePoruke/${props.match.params.telefon}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setPoruke(data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='comm1'>\r\n      <h1>Privatne poruke</h1>\r\n      {poruke.map((p) => (\r\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\r\n          <MDBCardBody>\r\n            <MDBCardTitle>\r\n              {' '}\r\n              {`${p.student.ime} ${p.student.prezime}`}\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <MDBIcon far icon='clock' />\r\n              &nbsp;&nbsp;\r\n              {new Date(Date.parse(p.poruka.vreme))\r\n                .toUTCString()\r\n                .split(' ')\r\n                .slice(0, 4)\r\n                .join(' ')}\r\n            </MDBCardTitle>\r\n            <MDBCardText>{p.poruka.tekst}</MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poruke;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\ZubarPogled.js",["166","167","168","169","170"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBContainer,\r\n  MDBBadge,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\n\r\nconst ZubarPogled = (props) => {\r\n  const [usluge, setUsluge] = useState([]);\r\n  useEffect(async () => {\r\n    const res = await axios.get(\r\n      'http://localhost:5000/vratiUslugeZubara/' + props.match.params.username\r\n    );\r\n    setUsluge(res.data);\r\n    const dugme = document.getElementById('dugme');\r\n    const res1 = await axios.get(\r\n      `/daLiPreporucujem/${props.match.params.usernameTrenutnog}/${props.match.params.username}`\r\n    );\r\n    dugme.disabled = res1.data;\r\n  }, []);\r\n  const klik = async () => {\r\n    const res = await axios.put('http://localhost:5000/preporuciZubara', {\r\n      usernameZubaraTrenutnog: props.match.params.usernameTrenutnog,\r\n      usernameZubaraZaPreporuku: props.match.params.username,\r\n    });\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div className='pogled'>\r\n      <div className='gore'>\r\n        <h2>{props.match.params.username}</h2>\r\n        <MDBBtn id='dugme' color='success' onClick={klik}>\r\n          Preporuci\r\n        </MDBBtn>\r\n      </div>\r\n      <div className='dole'>\r\n        <h2>Usluge koje nudim:</h2>\r\n\r\n        <MDBListGroup style={{ width: '26rem' }}>\r\n          {usluge.map((u) => (\r\n            <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\r\n              {u.naziv}{' '}\r\n              <MDBBadge color='primary' pill>\r\n                {u.cena}\r\n              </MDBBadge>\r\n            </MDBListGroupItem>\r\n          ))}\r\n        </MDBListGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZubarPogled;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\ZahteviStudenata.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Komentari.js",["171","172","173"],"import React, { useState, useEffect } from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBContainer } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nconst Komentari = (props) => {\r\n  const [komentari, setKomentari] = useState([]);\r\n  useEffect(async () => {\r\n    const res = await axios.get(\r\n      '/vratiKomentareOZubaru/' + props.match.params.telefon\r\n    );\r\n    setKomentari(res.data);\r\n  }, []);\r\n  return (\r\n    <div className='comm'>\r\n      <MDBListGroup style={{ width: '45rem' }}>\r\n        <h1\r\n          style={{\r\n            textAlign: 'center',\r\n            marginBottom: '40px',\r\n            color: 'black',\r\n            fontWeight: '500',\r\n            textDecoration: 'underline',\r\n          }}\r\n        >\r\n          Komentari koji se odnose na mene\r\n        </h1>\r\n        {komentari.map((k) => (\r\n          <MDBListGroupItem color='info'>\r\n            <div className='d-flex w-100 justify-content-between'>\r\n              <h5 className='mb-1'>\r\n                Komentarisao:&nbsp;&nbsp;{k.imeKorisnika}\r\n              </h5>\r\n              <small>3 days ago</small>\r\n            </div>\r\n            <p className='mb-1 terrr'>{k.komentar}</p>\r\n            <small style={{ color: 'green' }}>Ocena:{k.ocena}</small>\r\n          </MDBListGroupItem>\r\n        ))}\r\n      </MDBListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Komentari;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\KorisnikPogled.js",["174"],"import React, { useState, useEffect } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\r\n\r\nconst KorisnikPogled = (props) => {\r\n  const [pitanja, setPitanja] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`/pitanjaPostavioKorisnik/${props.match.params.telefonK}`, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setPitanja(data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className='comm1'>\r\n      <h1>Pitanja koje je korisnik postavljao</h1>\r\n      {pitanja.map((p) => (\r\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\r\n          <MDBCardBody>\r\n            <MDBCardTitle>{p.naslov + '?'}</MDBCardTitle>\r\n            <MDBCardText>{p.tekstPitanja}</MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KorisnikPogled;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\StudentPogled.js",["175"],"import React, { useState, useEffect } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\r\n\r\nconst StudentPogled = (props) => {\r\n  const [odgovori, setOdgovori] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`/pitanjaOdgovorioStudent/${props.match.params.telefonS}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setOdgovori(data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className='comm1'>\r\n      <h1 style={{ color: 'blue' }}>Odgovori na pitanja</h1>\r\n      {odgovori.map((o) => (\r\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\r\n          <MDBCardBody>\r\n            <MDBCardTitle>{o.pitanje + '?'}</MDBCardTitle>\r\n            <p\r\n              style={{\r\n                display: 'inline',\r\n                color: 'blue',\r\n                fontWeight: '600',\r\n                fontFamily: 'arial',\r\n              }}\r\n            >{`Pitanje je postavio:`}</p>\r\n            <p style={{ display: 'inline', marginLeft: '10px', color: 'red' }}>\r\n              {o.ime}\r\n            </p>\r\n            <MDBCardText style={{ color: 'blue' }}>\r\n              <p\r\n                style={{\r\n                  display: 'inline',\r\n                  color: 'blue',\r\n                  fontWeight: '600',\r\n                  fontFamily: 'arial',\r\n                }}\r\n              >{`Odgovor ovog korisnika je:`}</p>\r\n              <p\r\n                style={{ display: 'inline', marginLeft: '10px', color: 'red' }}\r\n              >\r\n                {o.odgovor}\r\n              </p>\r\n            </MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPogled;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\TerminiZubar.js",["176","177","178","179","180"],"import React, { Component } from 'react';\r\nimport { DayPilotScheduler, DayPilot } from 'daypilot-pro-react';\r\nimport axios from 'axios';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport nextId from 'react-id-generator';\r\n\r\nclass TerminiZubar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      usluge: [],\r\n      terminiNeodobreni: [],\r\n      ime1: 'Danilo',\r\n      ime2: 'Marija',\r\n      startDate: '2021-01-23',\r\n      days: 31,\r\n      scale: 'Day',\r\n      eventHeight: 45,\r\n      cellWidth: 40,\r\n      timeHeaders: [{ groupBy: 'Month' }, { groupBy: 'Day', format: 'd' }],\r\n      cellWidthSpec: 'Auto',\r\n      resources: [\r\n        // { name: 'Resource B', id: 'B' },\r\n        // { name: 'Resource C', id: 'C' },\r\n        // { name: 'Resource D', id: 'D' },\r\n        // { name: 'Resource E', id: 'E' },\r\n        // { name: 'Resource F', id: 'F' },\r\n        // { name: 'Resource G', id: 'G' },\r\n      ],\r\n      events: [\r\n        // {\r\n        //   id: 1,\r\n        //   text: 'Event 1',\r\n        //   start: '2021-10-01',\r\n        //   end: '2021-10-01',\r\n        //   resource: 'A0',\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch('/vratiTermineZubaraOdobrene/' + this.props.match.params.telefon, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) =>\r\n        data.forEach((t) => {\r\n          let zaTabelu = {\r\n            id: nextId(),\r\n            //ovde mitke da mi vrati i ime korisnika koji je potvrdio termin\r\n            text: t.ime,\r\n            start: t.datum,\r\n            end: t.datum,\r\n            resource: t.imeUsluge,\r\n            backColor: '#ff2626',\r\n          };\r\n          this.setState((state) => ({\r\n            events: [...state.events, zaTabelu],\r\n          }));\r\n        })\r\n      );\r\n    fetch(`/vratiTermineZubaraNeOdobrene/${this.props.match.params.telefon}`, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        this.setState({ terminiNeodobreni: data });\r\n      });\r\n\r\n    fetch(`/vratiUslugeZubara/${this.props.match.params.username}`, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ usluge: data });\r\n        data.forEach((d, index) => {\r\n          let dodaj = { name: d.naziv, id: d.naziv };\r\n          this.setState((state) => ({\r\n            resources: [...state.resources, dodaj],\r\n          }));\r\n        });\r\n      });\r\n  }\r\n  brisi(vrednost) {\r\n    let div = document.querySelector('.terzar' + vrednost);\r\n    let data = {\r\n      idTermina: this.state.terminiNeodobreni[vrednost].idTermina,\r\n    };\r\n    fetch('/obrisiTermin', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => window.location.reload())\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  async funkcija(ind) {\r\n    let obj = {\r\n      datum: this.state.terminiNeodobreni[ind].datum,\r\n      telefon: this.props.match.params.telefon,\r\n    };\r\n    console.log(obj);\r\n    const res = await axios.put('/potvrdiTermin', obj);\r\n    // console.log(res);\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    var { ...config } = this.state;\r\n    return (\r\n      <div>\r\n        <DayPilotScheduler\r\n          {...config}\r\n          onEventMoved={(args) => {\r\n            console.log(\r\n              'Event moved: ',\r\n              args.e.data.id,\r\n              args.newStart,\r\n              args.newEnd,\r\n              args.newResource\r\n            );\r\n          }}\r\n          onTimeRangeSelected={(args) => {\r\n            DayPilot.Modal.prompt('Upisite naziv korisnika', '').then(\r\n              (modal) => {\r\n                this.scheduler.clearSelection();\r\n                if (!modal.result) {\r\n                  return;\r\n                }\r\n                this.scheduler.events.add({\r\n                  id: DayPilot.guid(),\r\n                  text: modal.result,\r\n                  start: args.start,\r\n                  end: args.end,\r\n                  resource: args.resource,\r\n                });\r\n                console.log(modal.result);\r\n                var datum = args.start.toString('yyyy-MM-dd');\r\n                var telefon = this.props.match.params.telefon;\r\n              }\r\n            );\r\n          }}\r\n          onEventMoved={(args) =>\r\n            this.scheduler.message(\r\n              'Promenili ste datum pregleda: ' + args.e.data.text\r\n            )\r\n          }\r\n          ref={(component) => {\r\n            this.scheduler = component && component.control;\r\n          }}\r\n        />\r\n        <h3 style={{ color: 'black', marginTop: '20px' }}>\r\n          Termini na cekanju\r\n        </h3>\r\n        {this.state.terminiNeodobreni &&\r\n          this.state.terminiNeodobreni.map((t, index) => (\r\n            <div className='terzica'>\r\n              <div className={`terzar${index}`}>\r\n                {t.datum}&nbsp;&nbsp;&nbsp;\r\n                <MDBIcon icon='arrow-right' />\r\n                &nbsp; Ime: &nbsp;\r\n                {t.ime + ','}&nbsp;\r\n                {'Opis:'} &nbsp;{t.imeUsluge}&nbsp; &nbsp;\r\n                <MDBBtn\r\n                  color='success'\r\n                  size='sm'\r\n                  onClick={() => this.funkcija(index)}\r\n                >\r\n                  Potvrdi\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                  color='danger'\r\n                  size='sm'\r\n                  onClick={() => this.brisi(index)}\r\n                >\r\n                  Odbij\r\n                </MDBBtn>\r\n                &nbsp;\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TerminiZubar;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UrediProfil.js",["181","182"],"import React, { Fragment, useState } from 'react';\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst UrediProfil = ({ user }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n    telefon: '',\r\n    trenutniUsername: user.username,\r\n  });\r\n  const { username, sifra, telefon, trenutniUsername } = formData;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n      telefon,\r\n    };\r\n    console.log(zaSlanje);\r\n  };\r\n  const onChange = async (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <MDBInput\r\n          label='Promeni username'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='username'\r\n          value={username}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBInput\r\n          label='Promeni sifru'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='sifra'\r\n          value={sifra}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBInput\r\n          label='Promeni telefon'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='telefon'\r\n          value={telefon}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBBtn color='success' size='lg' type='submit'>\r\n          Sacuvaj izmene\r\n        </MDBBtn>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nUrediProfil.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(UrediProfil);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Forum.js",["183"],"import React, { Fragment, Component } from \"react\";\r\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\r\nimport Dashboar from \"../forum/Dashboard\";\r\n\r\nclass Forum extends Component {\r\n  state = { pretraga: \"\" };\r\n\r\n  promeniPretragu(value) {\r\n    this.setState({\r\n      pretraga: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {/* <NavbarKorisnik promeniPretragu={this.promeniPretragu.bind(this)} /> */}\r\n        {/* <br></br> */}\r\n        <Dashboar pretraga={this.state.pretraga} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nForum.propTypes = {};\r\n\r\nexport default Forum;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\auth\\Login.js",["184","185"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../actions/auth';\r\nimport { LOGOUT } from '../../actions/types';\r\n\r\nconst Login = ({ login, logout }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const { username, sifra } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n    };\r\n    let rola = login(zaSlanje);\r\n    rola.then((result) => {\r\n      if (result === 'Zubar') {\r\n        history.push(\"/dashboardZubar\");\r\n      } else {\r\n        history.push(\"/usluge\");\r\n      }\r\n    });\r\n    \r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Login</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='username'\r\n            placeholder='Username'\r\n            required='required'\r\n            value={username}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='password'\r\n            name='sifra'\r\n            placeholder='Password'\r\n            required='required'\r\n            value={sifra}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Prijavi se\r\n          </button>\r\n          <div className='izravnjaj'>\r\n            <Link to='/register'>\r\n              <h3>Registruj se</h3>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { login, logout })(Login);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Zubar.js",["186","187","188"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarPageZubar from './NavbarPageZubar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { MDBBtn } from 'mdbreact';\r\n\r\n{\r\n  /* <i class='fas fa-fw fa-user-graduate'></i> */\r\n}\r\n{\r\n  /* <i class='fas fa-fw fa-tooth'></i> */\r\n}\r\n\r\nconst Zubar = ({ zubar, ordinacija, zubari, korisnici, studenti }) => {\r\n  const [podaciZubar, setPodaciZubar] = useState({});\r\n  const [podaciOrdinacije, setPodaciOrdinacije] = useState({});\r\n  // const [zubariNiz, setZubariNiz] = useState([]);\r\n  useEffect(() => {\r\n    setPodaciZubar(zubar);\r\n  }, [zubar]);\r\n  useEffect(() => {\r\n    setPodaciOrdinacije(ordinacija);\r\n  }, [ordinacija]);\r\n  const history = useHistory();\r\n  // useEffect(() => {\r\n  //   setZubariNiz(zubari);\r\n  // }, [zubari]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavbarPageZubar\r\n        telefon={podaciZubar && podaciZubar.telefon}\r\n        ime={podaciOrdinacije && podaciOrdinacije.ime}\r\n        username={podaciZubar && podaciZubar.username}\r\n      />\r\n      <div className=\"glavni\">\r\n        {zubari &&\r\n          zubari.map((zubar) => (\r\n            <div className=\"glavnic\">\r\n              <h3>\r\n                <i class=\"fas fa-fw fa-tooth\"></i>\r\n                {zubar.ime} {zubar.prezime}\r\n              </h3>\r\n              <MDBBtn\r\n                color=\"default\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    \"/zubarPogled/\" +\r\n                      zubar.username +\r\n                      \"/\" +\r\n                      podaciZubar.username\r\n                  )\r\n                }\r\n              >\r\n                Pogledaj Profil\r\n              </MDBBtn>\r\n            </div>\r\n          ))}\r\n        {korisnici &&\r\n          korisnici.map((k) => (\r\n            <div className=\"glavnic\">\r\n              <h3>\r\n                <i class=\"fas fa-fw fa-male\"></i>\r\n                {k.ime} {k.prezime}\r\n              </h3>\r\n              <MDBBtn\r\n                color=\"default\"\r\n                onClick={() => history.push(\"/korisnikPage/\" + k.telefon)}\r\n              >\r\n                Pogledaj Profil\r\n              </MDBBtn>\r\n            </div>\r\n          ))}\r\n        {studenti &&\r\n          studenti.map((s) => (\r\n            <div className=\"glavnic\">\r\n              <h3>\r\n                <i class=\"fas fa-fw fa-user-graduate\"></i>\r\n                {s.ime} {s.prezime}\r\n              </h3>\r\n              <MDBBtn\r\n                color=\"default\"\r\n                onClick={() => history.push(\"/studentPage/\" + s.telefon)}\r\n              >\r\n                Pogledaj Profil\r\n              </MDBBtn>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nZubar.propTypes = {\r\n  zubar: PropTypes.object,\r\n  ordinacija: PropTypes.object,\r\n  zubari: PropTypes.array,\r\n  korisnici: PropTypes.array,\r\n  studenti: PropTypes.array,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  zubar: state.auth.user,\r\n  ordinacija: state.dashboard.ordinacija,\r\n  zubari: state.dashboard.sviZubari,\r\n  korisnici: state.dashboard.sviKorisnici,\r\n  studenti: state.dashboard.sviStudenti,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Zubar);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\forum\\DodajTemu.js",["189"],"import React, { Fragment } from \"react\";\r\nimport FormaDodaj from \"./FormaDodaj\";\r\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\r\n\r\nconst DodajTemu = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {/* <NavbarKorisnik /> */}\r\n      {/* <br></br> */}\r\n      <FormaDodaj />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDodajTemu.propTypes = {};\r\n\r\nexport default DodajTemu;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\forum\\Tema.js",["190"],"import React, { Fragment } from \"react\";\r\nimport PrikaziTemu from \"./PrikaziTemu\";\r\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\r\n\r\nconst OtvoriTemu = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {/* <NavbarKorisnik /> */}\r\n      {/* <br></br> */}\r\n      <PrikaziTemu data={props} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nOtvoriTemu.propTypes = {};\r\n\r\nexport default OtvoriTemu;\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluge.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Notification.js",[],"D:\\NBP_NEO4J\\client\\src\\actions\\types.js",[],"D:\\NBP_NEO4J\\client\\src\\actions\\auth.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\forum\\Dashboard.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarKorisnik.js",["191","192","193","194","195","196"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBContainer,\r\n  MDBFormInline,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\nimport { SVI_KORISNICI, SVI_ZUBARI, SVI_STUDENTI } from \"../../actions/types\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Navbarkorisnik extends Component {\r\n  state = {\r\n    vrednost: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ ...this.state, vrednost: e.target.value });\r\n    console.log(this.state);\r\n  };\r\n\r\n  pretraziUslugu() {\r\n    this.props.promeniPretragu(this.state.vrednost);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBNavbar\r\n          color=\"light-blue\"\r\n          dark\r\n          expand=\"md\"\r\n          style={{ marginTop: \"20px\" }}\r\n        >\r\n          <MDBNavbarBrand>\r\n            <strong className=\"white-text\">\r\n              {this.props.ime && this.props.ime}\r\n            </strong>\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarNav left>\r\n            {/* <MDBNavItem>\r\n                <MDBBtn href=\"/#\">\r\n                  <i class=\"fa fa-fw fa-home\"></i> Home\r\n                </MDBBtn>\r\n              </MDBNavItem> */}\r\n            <MDBNavItem>\r\n              <MDBFormInline waves>\r\n                <div className=\"md-form my-0\">\r\n                  <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"Pretraga...\"\r\n                    aria-label=\"Search\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n              </MDBFormInline>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBBtn\r\n                color=\"light-blue\"\r\n                className=\"dugmence\"\r\n                onClick={() => this.pretraziUslugu()}\r\n              >\r\n                Pretrazi usluge\r\n              </MDBBtn>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBBtn\r\n                color=\"light-blue\"\r\n                href=\"/forum\"\r\n              >\r\n                Forum\r\n              </MDBBtn>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-\" to=\"/\">\r\n                Odjavi se\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBNavbar>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nNavbarkorisnik.propTypes = {\r\n  promeniPretragu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, null)(Navbarkorisnik);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\forum\\FormaDodaj.js",["197"],"import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport Select from \"react-select\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FormaDodaj extends Component {\r\n  state = {\r\n    naslov: \"\",\r\n    tekst: \"\",\r\n    tagovi: [],\r\n    selektovaniTagovi: [],\r\n  };\r\n\r\n  // user = {\r\n  //   prezime: \"Stefanovic\",\r\n  //   ime: \"Djordje\",\r\n  //   sifra: \"djole\",\r\n  //   telefon: \"0213543256\",\r\n  //   username: \"djolecar@gmail.com\",\r\n  // };\r\n\r\n  componentDidMount() {\r\n    fetch(\"/vratiTagove\", { method: \"GET\" })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ tagovi: data });\r\n      });\r\n\r\n    console.log(this.props);\r\n  }\r\n\r\n  dodajTemu = (e) => {\r\n    const zaSlanje = {\r\n      naslov: this.state.naslov,\r\n      tekstPitanja: this.state.tekst,\r\n      telefonKorisnika: this.props.user.telefon,\r\n      tagoviZaFlitriranje: this.state.selektovaniTagovi,\r\n    };\r\n    try {\r\n      axios.post(\"http://localhost:5000/postaviPitanje\", zaSlanje).then(() => {\r\n        window.location.href = \"/forum\";\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    console.log(zaSlanje);\r\n  };\r\n\r\n  promenaTeksta(event) {\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      tekst: value,\r\n    });\r\n  }\r\n\r\n  promenaNaslova(event) {\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      naslov: value,\r\n    });\r\n  }\r\n\r\n  promenaTagova(selktovaniTagovi) {\r\n    const tagovi = selktovaniTagovi.map((item) => item.value);\r\n    console.log(selktovaniTagovi, tagovi);\r\n\r\n    this.setState({\r\n      selektovaniTagovi: tagovi,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer className=\"mt-5\">\r\n        <MDBRow>\r\n          <MDBCol md=\"12\">\r\n            <form>\r\n              <p className=\"h4 text-center mb-4\">Dodaj novu temu</p>\r\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"black-text\">\r\n                Naslov:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"subject\"\r\n                className=\"form-control\"\r\n                placeholder=\"npr. krvarenje desni...\"\r\n                onChange={(value) => this.promenaNaslova(value)}\r\n              />\r\n              <br />\r\n              <label\r\n                htmlFor=\"defaultFormLoginPasswordEx\"\r\n                className=\"black-text\"\r\n              >\r\n                Tekst:\r\n              </label>\r\n              <textarea\r\n                type=\"textarea\"\r\n                id=\"subjectText\"\r\n                className=\"form-control\"\r\n                onChange={(value) => this.promenaTeksta(value)}\r\n              />\r\n              <label className=\"black-text mt-4\">Tagovi:</label>\r\n\r\n              <div></div>\r\n              <Select\r\n                isMulti={true}\r\n                options={this.state.tagovi.map((name) => {\r\n                  return {\r\n                    value: name,\r\n                    label: name,\r\n                  };\r\n                })}\r\n                onChange={(value) => this.promenaTagova(value)}\r\n              />\r\n              <div className=\"text-center mt-4\">\r\n                <MDBBtn\r\n                  color=\"indigo\"\r\n                  onClick={(e) => this.dodajTemu(e)}\r\n                >\r\n                  Dodaj\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(FormaDodaj);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarPageZubar.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\forum\\PrikaziTemu.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UslugeDashboard.js",["198"],"import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Dashboar extends Component {\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h3 style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          Usluge nasih stomatologa\r\n        </h3>\r\n        <h5 className=\"mb-4\" style={{ marginLeft: \"150px\" }}>\r\n          Ovde mozete pronaci i pretraziti usluge i cene koje nude stomatolozi\r\n          registrovani na nasem sajtu\r\n        </h5>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ width: \"70%\" }}>\r\n            {this.props.usluge.map((el, index) => (\r\n              <MDBCard\r\n                className=\"my-3 px-5 pt-2 pb-2\"\r\n                style={{ fontWeight: 300, maxWidth: 700, minWidth: 500 }}\r\n              >\r\n                <MDBCardBody className=\"py-0\">\r\n                  <MDBRow>\r\n                    <div className=\"excerpt\">\r\n                      <div className=\"brief\">\r\n                        <div className=\"name\">\r\n                          {el.usluga.naziv} -\r\n                          <a\r\n                            href={\r\n                              \"/terminiZubar/\" +\r\n                              el.zubar.username +\r\n                              \"/\" +\r\n                              el.zubar.telefon\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            {el.zubar.ime} {el.zubar.prezime}{\" \"}\r\n                          </a>\r\n                        </div>{\" \"}\r\n                      </div>\r\n                      <div className=\"added-text\">{el.usluga.opis}</div>\r\n                      <div className=\"feed-footer\">\r\n                        <span>Cena: {el.usluga.cena} RSD</span>\r\n                      </div>\r\n                    </div>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Dashboar);\r\n","D:\\NBP_NEO4J\\client\\src\\reducers\\index.js",[],"D:\\NBP_NEO4J\\client\\src\\reducers\\dashboard.js",[],"D:\\NBP_NEO4J\\client\\src\\reducers\\auth.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"207","line":1,"column":37,"nodeType":"205","messageId":"206","endLine":1,"endColumn":46},{"ruleId":"203","severity":1,"message":"208","line":2,"column":10,"nodeType":"205","messageId":"206","endLine":2,"endColumn":14},{"ruleId":"203","severity":1,"message":"209","line":2,"column":16,"nodeType":"205","messageId":"206","endLine":2,"endColumn":24},{"ruleId":"203","severity":1,"message":"210","line":6,"column":10,"nodeType":"205","messageId":"206","endLine":6,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":22,"column":13,"nodeType":"213","endLine":27,"endColumn":4},{"ruleId":"211","severity":1,"message":"214","line":27,"column":6,"nodeType":"215","endLine":27,"endColumn":8,"suggestions":"216"},{"ruleId":"203","severity":1,"message":"208","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"208","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"211","severity":1,"message":"217","line":19,"column":6,"nodeType":"215","endLine":19,"endColumn":8,"suggestions":"218"},{"ruleId":"203","severity":1,"message":"219","line":4,"column":3,"nodeType":"205","messageId":"206","endLine":4,"endColumn":10},{"ruleId":"203","severity":1,"message":"220","line":7,"column":3,"nodeType":"205","messageId":"206","endLine":7,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":14,"column":13,"nodeType":"213","endLine":24,"endColumn":4},{"ruleId":"211","severity":1,"message":"221","line":24,"column":6,"nodeType":"215","endLine":24,"endColumn":8,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"223","line":26,"column":11,"nodeType":"205","messageId":"206","endLine":26,"endColumn":14},{"ruleId":"203","severity":1,"message":"220","line":2,"column":42,"nodeType":"205","messageId":"206","endLine":2,"endColumn":54},{"ruleId":"211","severity":1,"message":"212","line":7,"column":13,"nodeType":"213","endLine":12,"endColumn":4},{"ruleId":"211","severity":1,"message":"217","line":12,"column":6,"nodeType":"215","endLine":12,"endColumn":8,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"225","line":15,"column":6,"nodeType":"215","endLine":15,"endColumn":8,"suggestions":"226"},{"ruleId":"211","severity":1,"message":"227","line":13,"column":6,"nodeType":"215","endLine":13,"endColumn":8,"suggestions":"228"},{"ruleId":"203","severity":1,"message":"229","line":87,"column":9,"nodeType":"205","messageId":"206","endLine":87,"endColumn":12},{"ruleId":"203","severity":1,"message":"223","line":110,"column":11,"nodeType":"205","messageId":"206","endLine":110,"endColumn":14},{"ruleId":"203","severity":1,"message":"230","line":145,"column":21,"nodeType":"205","messageId":"206","endLine":145,"endColumn":26},{"ruleId":"203","severity":1,"message":"231","line":146,"column":21,"nodeType":"205","messageId":"206","endLine":146,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":150,"column":11,"nodeType":"234","endLine":154,"endColumn":12},{"ruleId":"203","severity":1,"message":"235","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":13},{"ruleId":"203","severity":1,"message":"236","line":14,"column":37,"nodeType":"205","messageId":"206","endLine":14,"endColumn":53},{"ruleId":"203","severity":1,"message":"237","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":22},{"ruleId":"203","severity":1,"message":"238","line":7,"column":10,"nodeType":"205","messageId":"206","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"239","line":17,"column":6,"nodeType":"215","endLine":17,"endColumn":8,"suggestions":"240"},{"ruleId":"203","severity":1,"message":"235","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":9,"column":1,"nodeType":"243","messageId":"244","endLine":11,"endColumn":2},{"ruleId":"241","severity":1,"message":"242","line":12,"column":1,"nodeType":"243","messageId":"244","endLine":14,"endColumn":2},{"ruleId":"203","severity":1,"message":"237","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":22},{"ruleId":"203","severity":1,"message":"237","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":22},{"ruleId":"203","severity":1,"message":"235","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":13},{"ruleId":"203","severity":1,"message":"245","line":10,"column":3,"nodeType":"205","messageId":"206","endLine":10,"endColumn":19},{"ruleId":"203","severity":1,"message":"246","line":11,"column":3,"nodeType":"205","messageId":"206","endLine":11,"endColumn":14},{"ruleId":"203","severity":1,"message":"247","line":16,"column":10,"nodeType":"205","messageId":"206","endLine":16,"endColumn":23},{"ruleId":"203","severity":1,"message":"248","line":16,"column":25,"nodeType":"205","messageId":"206","endLine":16,"endColumn":35},{"ruleId":"203","severity":1,"message":"249","line":16,"column":37,"nodeType":"205","messageId":"206","endLine":16,"endColumn":49},{"ruleId":"203","severity":1,"message":"250","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":19},{"ruleId":"203","severity":1,"message":"235","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'json' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.match.params.username'. Either include it or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'props.match.params.telefon'. Either include it or remove the dependency array.",["254"],"'MDBIcon' is defined but never used.","'MDBContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.username' and 'props.match.params.usernameTrenutnog'. Either include them or remove the dependency array.",["255"],"'res' is assigned a value but never used.",["256"],"React Hook useEffect has a missing dependency: 'props.match.params.telefonK'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'props.match.params.telefonS'. Either include it or remove the dependency array.",["258"],"'div' is assigned a value but never used.","'datum' is assigned a value but never used.","'telefon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","'trenutniUsername' is assigned a value but never used.","'NavbarKorisnik' is defined but never used.","'LOGOUT' is defined but never used.","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'SVI_KORISNICI' is defined but never used.","'SVI_ZUBARI' is defined but never used.","'SVI_STUDENTI' is defined but never used.","'MultiSelect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"262","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [props.match.params.username]",{"range":"273","text":"274"},"Update the dependencies array to be: [props.match.params.telefon]",{"range":"275","text":"276"},"Update the dependencies array to be: [props.match.params.username, props.match.params.usernameTrenutnog]",{"range":"277","text":"278"},{"range":"279","text":"276"},"Update the dependencies array to be: [props.match.params.telefonK]",{"range":"280","text":"281"},"Update the dependencies array to be: [props.match.params.telefonS]",{"range":"282","text":"283"},"Update the dependencies array to be: [logout]",{"range":"284","text":"285"},[568,570],"[props.match.params.username]",[466,468],"[props.match.params.telefon]",[690,692],"[props.match.params.username, props.match.params.usernameTrenutnog]",[405,407],[488,490],"[props.match.params.telefonK]",[458,460],"[props.match.params.telefonS]",[493,495],"[logout]"]
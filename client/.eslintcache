[{"D:\\NBP_NEO4J\\client\\src\\index.js":"1","D:\\NBP_NEO4J\\client\\src\\App.js":"2","D:\\NBP_NEO4J\\client\\src\\store.js":"3","D:\\NBP_NEO4J\\client\\src\\reducers\\index.js":"4","D:\\NBP_NEO4J\\client\\src\\reducers\\auth.js":"5","D:\\NBP_NEO4J\\client\\src\\actions\\types.js":"6","D:\\NBP_NEO4J\\client\\src\\components\\auth\\Register.js":"7","D:\\NBP_NEO4J\\client\\src\\actions\\auth.js":"8","D:\\NBP_NEO4J\\client\\src\\components\\auth\\Login.js":"9","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterStudent.js":"10","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterOrdinacija.js":"11","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Zubar.js":"12","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarPageZubar.js":"13","D:\\NBP_NEO4J\\client\\src\\reducers\\dashboard.js":"14","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluga.js":"15","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Poruke.js":"16","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UrediProfil.js":"17","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\TerminiZubar.js":"18"},{"size":297,"mtime":1611223975601,"results":"19","hashOfConfig":"20"},{"size":1659,"mtime":1611364672185,"results":"21","hashOfConfig":"20"},{"size":985,"mtime":1611248946790,"results":"22","hashOfConfig":"20"},{"size":164,"mtime":1611253374828,"results":"23","hashOfConfig":"20"},{"size":1130,"mtime":1611253314825,"results":"24","hashOfConfig":"20"},{"size":745,"mtime":1611325089644,"results":"25","hashOfConfig":"20"},{"size":8574,"mtime":1611219279953,"results":"26","hashOfConfig":"20"},{"size":1447,"mtime":1611327015250,"results":"27","hashOfConfig":"20"},{"size":1911,"mtime":1611252927142,"results":"28","hashOfConfig":"20"},{"size":3195,"mtime":1611242388145,"results":"29","hashOfConfig":"20"},{"size":1886,"mtime":1611242598689,"results":"30","hashOfConfig":"20"},{"size":2593,"mtime":1611364075539,"results":"31","hashOfConfig":"20"},{"size":4993,"mtime":1611364703826,"results":"32","hashOfConfig":"20"},{"size":1174,"mtime":1611325150452,"results":"33","hashOfConfig":"20"},{"size":4303,"mtime":1611330196035,"results":"34","hashOfConfig":"20"},{"size":1531,"mtime":1611315363021,"results":"35","hashOfConfig":"20"},{"size":1811,"mtime":1611340151307,"results":"36","hashOfConfig":"20"},{"size":5437,"mtime":1611531953368,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1yczhg4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\NBP_NEO4J\\client\\src\\index.js",[],["83","84"],"D:\\NBP_NEO4J\\client\\src\\App.js",[],"D:\\NBP_NEO4J\\client\\src\\store.js",[],"D:\\NBP_NEO4J\\client\\src\\reducers\\index.js",[],"D:\\NBP_NEO4J\\client\\src\\reducers\\auth.js",[],"D:\\NBP_NEO4J\\client\\src\\actions\\types.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\auth\\Register.js",["85","86","87","88","89"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\nimport { json } from 'body-parser';\r\n\r\nconst Register = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    imeZ: '',\r\n    prezimeZ: '',\r\n    gradZ: '',\r\n    telefonZ: '',\r\n    usernameZ: '',\r\n    sifraZ: '',\r\n    imeK: '',\r\n    prezimeK: '',\r\n    telefonK: '',\r\n    usernameK: '',\r\n    sifraK: '',\r\n  });\r\n\r\n  const {\r\n    imeZ,\r\n    prezimeZ,\r\n    gradZ,\r\n    telefonZ,\r\n    usernameZ,\r\n    sifraZ,\r\n    imeK,\r\n    prezimeK,\r\n    telefonK,\r\n    usernameK,\r\n    sifraK,\r\n  } = formData;\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime: imeZ,\r\n      prezime: prezimeZ,\r\n      grad: gradZ,\r\n      telefon: telefonZ,\r\n      username: usernameZ,\r\n      sifra: sifraZ,\r\n    };\r\n    registracija(zaSlanje, 'Zubar');\r\n    history.push('/');\r\n  };\r\n\r\n  const onSubmitK = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime: imeK,\r\n      prezime: prezimeK,\r\n      telefon: telefonK,\r\n      username: usernameK,\r\n      sifra: sifraK,\r\n    };\r\n    registracija(zaSlanje, 'Korisnik');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className='terza'>\r\n      <div className='login-wrap'>\r\n        <div className='login-html'>\r\n          <input id='tab-1' type='radio' name='tab' className='sign-in' />\r\n          <label for='tab-1' className='tab'>\r\n            Zubar\r\n          </label>\r\n          <input id='tab-2' type='radio' name='tab' className='sign-up' />\r\n          <label for='tab-2' className='tab'>\r\n            Korisnik\r\n          </label>\r\n          <div className='login-form'>\r\n            <form onSubmit={onSubmit}>\r\n              <div className='sign-in-htm'>\r\n                <div className='group'>\r\n                  <label for='imeZubara' className='label'>\r\n                    Ime\r\n                  </label>\r\n                  <input\r\n                    id='imeZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='imeZ'\r\n                    value={imeZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='prezimeZubara' className='label'>\r\n                    Prezime\r\n                  </label>\r\n                  <input\r\n                    id='prezimeZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='prezimeZ'\r\n                    value={prezimeZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='gradZubara' className='label'>\r\n                    Grad\r\n                  </label>\r\n                  <input\r\n                    id='gradZubara'\r\n                    type='text'\r\n                    className='input'\r\n                    name='gradZ'\r\n                    value={gradZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='telefonZubara' className='label'>\r\n                    Telefon\r\n                  </label>\r\n                  <input\r\n                    id='telefonZubara'\r\n                    type='number'\r\n                    className='input'\r\n                    name='telefonZ'\r\n                    value={telefonZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='usernameZubara' className='label'>\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    id='username'\r\n                    type='text'\r\n                    className='input'\r\n                    name='usernameZ'\r\n                    value={usernameZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='sifraZubara' className='label'>\r\n                    Sirfa\r\n                  </label>\r\n                  <input\r\n                    id='sifraZubara'\r\n                    type='password'\r\n                    className='input'\r\n                    name='sifraZ'\r\n                    value={sifraZ}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button'\r\n                    value='Registruj se'\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button1'\r\n                    value='Kreiraj ordinaciju'\r\n                    onClick={() => history.push('/register/ordinacija')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form onSubmit={onSubmitK}>\r\n              <div className='sign-up-htm'>\r\n                <div className='group'>\r\n                  <label for='imeKorisnika' className='label'>\r\n                    Ime\r\n                  </label>\r\n                  <input\r\n                    id='imeKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='imeK'\r\n                    value={imeK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='prezimeKorisnika' className='label'>\r\n                    Prezime\r\n                  </label>\r\n                  <input\r\n                    id='prezimeKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='prezimeK'\r\n                    value={prezimeK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='telefonKorisnika' className='label'>\r\n                    Telefon\r\n                  </label>\r\n                  <input\r\n                    id='telefonKorisnika'\r\n                    type='munber'\r\n                    className='input'\r\n                    name='telefonK'\r\n                    value={telefonK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='usernameKorisnika' className='label'>\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    id='usernameKorisnika'\r\n                    type='text'\r\n                    className='input'\r\n                    name='usernameK'\r\n                    value={usernameK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n                <div className='group'>\r\n                  <label for='sifraKorisnika' className='label'>\r\n                    Sifra\r\n                  </label>\r\n                  <input\r\n                    id='sifraKorisnika'\r\n                    type='password'\r\n                    className='input'\r\n                    name='sifraK'\r\n                    value={sifraK}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button'\r\n                    value='Registruj se'\r\n                  />\r\n                </div>\r\n\r\n                <div className='group'>\r\n                  <input\r\n                    type='submit'\r\n                    className='button1'\r\n                    value='Student si?'\r\n                    onClick={() => history.push('/register/student')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(Register);\r\n","D:\\NBP_NEO4J\\client\\src\\actions\\auth.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\auth\\Login.js",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../actions/auth';\r\nimport { LOGOUT } from '../../actions/types';\r\n\r\nconst Login = ({ login, logout }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const { username, sifra } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n    };\r\n    login(zaSlanje);\r\n\r\n    history.push('/dashboardZubar');\r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Login</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='username'\r\n            placeholder='Username'\r\n            required='required'\r\n            value={username}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='password'\r\n            name='sifra'\r\n            placeholder='Password'\r\n            required='required'\r\n            value={sifra}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Prijavi se\r\n          </button>\r\n          <div className='izravnjaj'>\r\n            <Link to='/register'>\r\n              <h3>Registruj se</h3>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { login, logout })(Login);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterStudent.js",["92"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\n\r\nconst RegisterStudent = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n    ime: '',\r\n    prezime: '',\r\n    grad: '',\r\n    telefon: '',\r\n    godina: '',\r\n    prosek: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    username,\r\n    sifra,\r\n    ime,\r\n    prezime,\r\n    grad,\r\n    telefon,\r\n    godina,\r\n    prosek,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n      ime,\r\n      prezime,\r\n      grad,\r\n      telefon,\r\n      godina,\r\n      prosek,\r\n    };\r\n    registracija(zaSlanje, 'Student');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Register</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='username'\r\n            placeholder='Username'\r\n            required='required'\r\n            value={username}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='password'\r\n            name='sifra'\r\n            placeholder='Password'\r\n            required='required'\r\n            value={sifra}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='ime'\r\n            placeholder='Ime'\r\n            required='required'\r\n            value={ime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='prezime'\r\n            placeholder='Prezime'\r\n            required='required'\r\n            value={prezime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='grad'\r\n            placeholder='Grad'\r\n            required='required'\r\n            value={grad}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='telefon'\r\n            placeholder='Telefon'\r\n            required='required'\r\n            value={telefon}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='godina'\r\n            placeholder='Godina'\r\n            required='required'\r\n            value={godina}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='prosek'\r\n            placeholder='Prosek'\r\n            required='required'\r\n            value={prosek}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Registruj se\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegisterStudent.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(RegisterStudent);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\auth\\RegisterOrdinacija.js",["93"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registracija } from '../../actions/auth';\r\n\r\nconst RegisterOrdinacija = ({ registracija }) => {\r\n  const [formData, setFormData] = useState({\r\n    ime: '',\r\n    grad: '',\r\n    adresa: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const { ime, grad, adresa } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      ime,\r\n      grad,\r\n      adresa,\r\n    };\r\n    registracija(zaSlanje, 'Ordinacija');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='terza1'>\r\n      <div class='login'>\r\n        <h1>Register</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='ime'\r\n            placeholder='Ime'\r\n            required='required'\r\n            value={ime}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='grad'\r\n            placeholder='Grad'\r\n            required='required'\r\n            value={grad}\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='adresa'\r\n            placeholder='Adresa'\r\n            required='required'\r\n            value={adresa}\r\n            onChange={onChange}\r\n          />\r\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\r\n            Registruj ordinaciju\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegisterOrdinacija.propTypes = {\r\n  registracija: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { registracija })(RegisterOrdinacija);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Zubar.js",["94","95","96"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarPageZubar from './NavbarPageZubar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { MDBBtn } from 'mdbreact';\r\n\r\n{\r\n  /* <i class='fas fa-fw fa-user-graduate'></i> */\r\n}\r\n{\r\n  /* <i class='fas fa-fw fa-tooth'></i> */\r\n}\r\n\r\nconst Zubar = ({ zubar, ordinacija, zubari, korisnici, studenti }) => {\r\n  const [podaciZubar, setPodaciZubar] = useState({});\r\n  const [podaciOrdinacije, setPodaciOrdinacije] = useState({});\r\n  // const [zubariNiz, setZubariNiz] = useState([]);\r\n  useEffect(() => {\r\n    setPodaciZubar(zubar);\r\n  }, [zubar]);\r\n  useEffect(() => {\r\n    setPodaciOrdinacije(ordinacija);\r\n  }, [ordinacija]);\r\n  // useEffect(() => {\r\n  //   setZubariNiz(zubari);\r\n  // }, [zubari]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavbarPageZubar\r\n        telefon={podaciZubar && podaciZubar.telefon}\r\n        ime={podaciOrdinacije && podaciOrdinacije.ime}\r\n        username={podaciZubar && podaciZubar.username}\r\n      />\r\n      <div className='glavni'>\r\n        {zubari &&\r\n          zubari.map((zubar) => (\r\n            <div className='glavnic'>\r\n              <h3>\r\n                <i class='fas fa-fw fa-tooth'></i>\r\n                {zubar.ime} {zubar.prezime}\r\n              </h3>\r\n              <MDBBtn color='default'>Pogledaj Profil</MDBBtn>\r\n            </div>\r\n          ))}\r\n        {korisnici &&\r\n          korisnici.map((k) => (\r\n            <div className='glavnic'>\r\n              <h3>\r\n                <i class='fas fa-fw fa-male'></i>\r\n                {k.ime} {k.prezime}\r\n              </h3>\r\n              <MDBBtn color='default'>Pogledaj Profil</MDBBtn>\r\n            </div>\r\n          ))}\r\n        {studenti &&\r\n          studenti.map((s) => (\r\n            <div className='glavnic'>\r\n              <h3>\r\n                <i class='fas fa-fw fa-user-graduate'></i>\r\n                {s.ime} {s.prezime}\r\n              </h3>\r\n              <MDBBtn color='default'>Pogledaj Profil</MDBBtn>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nZubar.propTypes = {\r\n  zubar: PropTypes.object,\r\n  ordinacija: PropTypes.object,\r\n  zubari: PropTypes.array,\r\n  korisnici: PropTypes.array,\r\n  studenti: PropTypes.array,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  zubar: state.auth.user,\r\n  ordinacija: state.dashboard.ordinacija,\r\n  zubari: state.dashboard.sviZubari,\r\n  korisnici: state.dashboard.sviKorisnici,\r\n  studenti: state.dashboard.sviStudenti,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Zubar);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\NavbarPageZubar.js",[],"D:\\NBP_NEO4J\\client\\src\\reducers\\dashboard.js",[],"D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Usluga.js",["97","98"],"import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { SVE_PORUKE, SVE_USLUGE } from '../../actions/types';\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBBadge,\r\n} from 'mdbreact';\r\n\r\nconst akcija = (usluga) => (dispatch) => {\r\n  console.log(usluga);\r\n  dispatch({\r\n    type: SVE_PORUKE,\r\n    payload: usluga,\r\n  });\r\n};\r\n\r\nconst Usluga = ({ user, sveUsluge, akcija }) => {\r\n  const [uslugaPodaci, setUslugaPodaci] = useState({\r\n    naziv: '',\r\n    cena: '',\r\n    opis: '',\r\n    username: user.username,\r\n  });\r\n\r\n  const { naziv, cena, opis, username } = uslugaPodaci;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      naziv,\r\n      cena,\r\n      opis,\r\n    };\r\n    console.log(zaSlanje);\r\n    const element = (\r\n      <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\r\n        {opis}\r\n        <MDBBadge color='primary' pill>\r\n          {cena}\r\n        </MDBBadge>\r\n      </MDBListGroupItem>\r\n    );\r\n    ReactDOM.render(element, document.getElementById('root1'));\r\n\r\n    const res = await axios.put('/novaUsluga', zaSlanje);\r\n    console.log(res.data);\r\n    akcija(zaSlanje);\r\n  };\r\n  const onChange = (e) =>\r\n    setUslugaPodaci({ ...uslugaPodaci, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <MDBContainer className='terza5'>\r\n      <MDBRow>\r\n        <MDBCol md='6'>\r\n          <form onSubmit={onSubmit}>\r\n            <p className='h4 text-center mb-4'>Dodaj novu uslugu</p>\r\n            <label htmlFor='defaultFormContactNameEx' className='grey-text'>\r\n              Naziv usluge\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id='defaultFormContactNameEx'\r\n              className='form-control'\r\n              name='naziv'\r\n              value={naziv}\r\n              onChange={onChange}\r\n            />\r\n            <br />\r\n            <label htmlFor='defaultFormContactEmailEx' className='grey-text'>\r\n              Cena\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id='defaultFormContactEmailEx'\r\n              className='form-control'\r\n              name='cena'\r\n              value={cena}\r\n              onChange={onChange}\r\n            />\r\n            <br />\r\n            <label htmlFor='defaultFormContactMessageEx' className='grey-text'>\r\n              Opis\r\n            </label>\r\n            <textarea\r\n              type='text'\r\n              id='defaultFormContactMessageEx'\r\n              className='form-control'\r\n              rows='3'\r\n              name='opis'\r\n              value={opis}\r\n              onChange={onChange}\r\n            />\r\n            <div className='text-center mt-4'>\r\n              <MDBBtn color='warning' outline type='submit'>\r\n                Dodaj\r\n                <MDBIcon far icon='paper-plane' className='ml-2' />\r\n              </MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n        <MDBCol md='6' className='terza6'>\r\n          <p className='h4  mb-4'>Lista usluga koje nudim</p>\r\n          <MDBListGroup className='terzinjo' style={{ width: '31rem' }}>\r\n            {sveUsluge.map((usl) => (\r\n              <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\r\n                {usl.naziv}\r\n                <MDBBadge color='primary' pill>\r\n                  {usl.cena}\r\n                </MDBBadge>\r\n              </MDBListGroupItem>\r\n            ))}\r\n            <MDBListGroupItem\r\n              className='d-flex justify-content-between align-items-center'\r\n              id='root1'\r\n            >\r\n              <MDBBadge color='primary' pill></MDBBadge>\r\n            </MDBListGroupItem>\r\n          </MDBListGroup>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nUsluga.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  sveUsluge: PropTypes.array.isRequired,\r\n  akcija: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  sveUsluge: state.dashboard.sveUsluge,\r\n});\r\n\r\nexport default connect(mapStateToProps, { akcija })(Usluga);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\Poruke.js",["99","100"],"import React, { useEffect, useState } from 'react';\r\nimport { MDBNotification, MDBContainer } from 'mdbreact';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst Poruke = (props, { vratiSvePoruke }) => {\r\n  const [poruke, setPoruke] = useState([]);\r\n  // const datumi = [];\r\n  const fetchData = async () => {\r\n    const res = await axios.get(\r\n      '/vratiPrivatnePoruke/' + props.match.params.telefon\r\n    );\r\n    setPoruke(res.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   konvertuj();\r\n  //   console.log(tmp);\r\n  // }, [poruke]);\r\n  // const konvertuj = () => {\r\n  //   poruke.forEach((p) => {\r\n  //     let d = new Date(Date.parse(p.poruka.vreme));\r\n  //     setTmp([...tmp, 'terza']);\r\n  //   });\r\n  // };\r\n  return (\r\n    <div className='terza3'>\r\n      <MDBContainer className='opa'>\r\n        {poruke &&\r\n          poruke.map((p) => (\r\n            <div>\r\n              {p.poruka.vreme}\r\n              <MDBNotification\r\n                show\r\n                fade\r\n                iconClassName='text-primary'\r\n                title={`${p.student.ime} ${p.student.prezime}`}\r\n                message={p.poruka.tekst}\r\n                // text={porukeNiz[0]}\r\n              />\r\n            </div>\r\n          ))}\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nPoruke.propTypes = {\r\n  vratiSvePoruke: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect()(Poruke);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\UrediProfil.js",["101","102"],"import React, { Fragment, useState } from 'react';\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst UrediProfil = ({ user }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    sifra: '',\r\n    telefon: '',\r\n    trenutniUsername: user.username,\r\n  });\r\n  const { username, sifra, telefon, trenutniUsername } = formData;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      username,\r\n      sifra,\r\n      telefon,\r\n    };\r\n    console.log(zaSlanje);\r\n  };\r\n  const onChange = async (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <MDBInput\r\n          label='Promeni username'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='username'\r\n          value={username}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBInput\r\n          label='Promeni sifru'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='sifra'\r\n          value={sifra}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBInput\r\n          label='Promeni telefon'\r\n          outline\r\n          size='lg'\r\n          background\r\n          name='telefon'\r\n          value={telefon}\r\n          onChange={onChange}\r\n        />\r\n        ;\r\n        <MDBBtn color='success' size='lg' type='submit'>\r\n          Sacuvaj izmene\r\n        </MDBBtn>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nUrediProfil.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(UrediProfil);\r\n","D:\\NBP_NEO4J\\client\\src\\components\\dashboard\\TerminiZubar.js",["103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":46},{"ruleId":"111","severity":1,"message":"116","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"117","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"118","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"111","severity":1,"message":"119","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":17,"column":6,"nodeType":"122","endLine":17,"endColumn":8,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"116","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"124","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":8,"column":1,"nodeType":"127","messageId":"128","endLine":10,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":11,"column":1,"nodeType":"127","messageId":"128","endLine":13,"endColumn":2},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"129","line":6,"column":22,"nodeType":"113","messageId":"114","endLine":6,"endColumn":32},{"ruleId":"111","severity":1,"message":"130","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":28},{"ruleId":"120","severity":1,"message":"131","line":19,"column":6,"nodeType":"122","endLine":19,"endColumn":8,"suggestions":"132"},{"ruleId":"111","severity":1,"message":"124","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"133","line":14,"column":37,"nodeType":"113","messageId":"114","endLine":14,"endColumn":53},{"ruleId":"111","severity":1,"message":"134","line":96,"column":11,"nodeType":"113","messageId":"114","endLine":96,"endColumn":14},{"ruleId":"111","severity":1,"message":"135","line":131,"column":21,"nodeType":"113","messageId":"114","endLine":131,"endColumn":26},{"ruleId":"111","severity":1,"message":"136","line":132,"column":21,"nodeType":"113","messageId":"114","endLine":132,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":136,"column":11,"nodeType":"139","endLine":140,"endColumn":12},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'json' is defined but never used.","'LOGOUT' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["142"],"'axios' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'SVE_USLUGE' is defined but never used.","'bindActionCreators' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["143"],"'trenutniUsername' is assigned a value but never used.","'res' is assigned a value but never used.","'datum' is assigned a value but never used.","'telefon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [logout]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchData]",{"range":"150","text":"151"},[493,495],"[logout]",[596,598],"[fetchData]"]
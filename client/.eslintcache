[{"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/index.js":"1","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/App.js":"2","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/store.js":"3","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Register.js":"4","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterStudent.js":"5","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Zubar.js":"6","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterOrdinacija.js":"7","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Login.js":"8","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarPageZubar.js":"9","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/auth.js":"10","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/index.js":"11","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/types.js":"12","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/auth.js":"13","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/DodajTemu.js":"14","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/FormaDodaj.js":"15","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Poruke.js":"16","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluga.js":"17","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UrediProfil.js":"18","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/dashboard.js":"19","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/PrikaziTemu.js":"20","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Dashboard.js":"21","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Forum.js":"22","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Tema.js":"23","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Komentari.js":"24","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZubarPogled.js":"25","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/TerminiZubar.js":"26","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarKorisnik.js":"27","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/KorisnikPogled.js":"28","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/StudentPogled.js":"29","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZahteviStudenata.js":"30","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Notification.js":"31","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluge.js":"32","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UslugeDashboard.js":"33"},{"size":289,"mtime":1611241015052,"results":"34","hashOfConfig":"35"},{"size":3358,"mtime":1612036975964,"results":"36","hashOfConfig":"35"},{"size":946,"mtime":1611326066465,"results":"37","hashOfConfig":"35"},{"size":8298,"mtime":1611241015048,"results":"38","hashOfConfig":"35"},{"size":3062,"mtime":1611326066461,"results":"39","hashOfConfig":"35"},{"size":3172,"mtime":1612031322610,"results":"40","hashOfConfig":"35"},{"size":1812,"mtime":1611326066461,"results":"41","hashOfConfig":"35"},{"size":1835,"mtime":1611326066461,"results":"42","hashOfConfig":"35"},{"size":5275,"mtime":1612027051168,"results":"43","hashOfConfig":"35"},{"size":1380,"mtime":1611950817600,"results":"44","hashOfConfig":"35"},{"size":159,"mtime":1611326066465,"results":"45","hashOfConfig":"35"},{"size":730,"mtime":1611334873203,"results":"46","hashOfConfig":"35"},{"size":1076,"mtime":1611950779880,"results":"47","hashOfConfig":"35"},{"size":352,"mtime":1612033689270,"results":"48","hashOfConfig":"35"},{"size":3513,"mtime":1612037596774,"results":"49","hashOfConfig":"35"},{"size":1356,"mtime":1612027051168,"results":"50","hashOfConfig":"35"},{"size":3605,"mtime":1612027051180,"results":"51","hashOfConfig":"35"},{"size":1737,"mtime":1611780927749,"results":"52","hashOfConfig":"35"},{"size":1113,"mtime":1611334873203,"results":"53","hashOfConfig":"35"},{"size":5463,"mtime":1612037530270,"results":"54","hashOfConfig":"35"},{"size":4759,"mtime":1612037099908,"results":"55","hashOfConfig":"35"},{"size":581,"mtime":1612033637481,"results":"56","hashOfConfig":"35"},{"size":371,"mtime":1612033746890,"results":"57","hashOfConfig":"35"},{"size":1312,"mtime":1612027051168,"results":"58","hashOfConfig":"35"},{"size":1673,"mtime":1611780927749,"results":"59","hashOfConfig":"35"},{"size":5638,"mtime":1612027051168,"results":"60","hashOfConfig":"35"},{"size":3481,"mtime":1612034593711,"results":"61","hashOfConfig":"35"},{"size":904,"mtime":1612027051168,"results":"62","hashOfConfig":"35"},{"size":1681,"mtime":1612027051168,"results":"63","hashOfConfig":"35"},{"size":304,"mtime":1612027051180,"results":"64","hashOfConfig":"35"},{"size":1998,"mtime":1612027051168,"results":"65","hashOfConfig":"35"},{"size":729,"mtime":1612036191632,"results":"66","hashOfConfig":"35"},{"size":1830,"mtime":1612036757880,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"18ofzzx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/index.js",[],["146","147"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/App.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/store.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Register.js",["148","149","150","151","152"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\nimport { json } from 'body-parser';\n\nconst Register = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    imeZ: '',\n    prezimeZ: '',\n    gradZ: '',\n    telefonZ: '',\n    usernameZ: '',\n    sifraZ: '',\n    imeK: '',\n    prezimeK: '',\n    telefonK: '',\n    usernameK: '',\n    sifraK: '',\n  });\n\n  const {\n    imeZ,\n    prezimeZ,\n    gradZ,\n    telefonZ,\n    usernameZ,\n    sifraZ,\n    imeK,\n    prezimeK,\n    telefonK,\n    usernameK,\n    sifraK,\n  } = formData;\n\n  const history = useHistory();\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime: imeZ,\n      prezime: prezimeZ,\n      grad: gradZ,\n      telefon: telefonZ,\n      username: usernameZ,\n      sifra: sifraZ,\n    };\n    registracija(zaSlanje, 'Zubar');\n    history.push('/');\n  };\n\n  const onSubmitK = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime: imeK,\n      prezime: prezimeK,\n      telefon: telefonK,\n      username: usernameK,\n      sifra: sifraK,\n    };\n    registracija(zaSlanje, 'Korisnik');\n    history.push('/');\n  };\n\n  return (\n    <div className='terza'>\n      <div className='login-wrap'>\n        <div className='login-html'>\n          <input id='tab-1' type='radio' name='tab' className='sign-in' />\n          <label for='tab-1' className='tab'>\n            Zubar\n          </label>\n          <input id='tab-2' type='radio' name='tab' className='sign-up' />\n          <label for='tab-2' className='tab'>\n            Korisnik\n          </label>\n          <div className='login-form'>\n            <form onSubmit={onSubmit}>\n              <div className='sign-in-htm'>\n                <div className='group'>\n                  <label for='imeZubara' className='label'>\n                    Ime\n                  </label>\n                  <input\n                    id='imeZubara'\n                    type='text'\n                    className='input'\n                    name='imeZ'\n                    value={imeZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='prezimeZubara' className='label'>\n                    Prezime\n                  </label>\n                  <input\n                    id='prezimeZubara'\n                    type='text'\n                    className='input'\n                    name='prezimeZ'\n                    value={prezimeZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='gradZubara' className='label'>\n                    Grad\n                  </label>\n                  <input\n                    id='gradZubara'\n                    type='text'\n                    className='input'\n                    name='gradZ'\n                    value={gradZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='telefonZubara' className='label'>\n                    Telefon\n                  </label>\n                  <input\n                    id='telefonZubara'\n                    type='number'\n                    className='input'\n                    name='telefonZ'\n                    value={telefonZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='usernameZubara' className='label'>\n                    Username\n                  </label>\n                  <input\n                    id='username'\n                    type='text'\n                    className='input'\n                    name='usernameZ'\n                    value={usernameZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='sifraZubara' className='label'>\n                    Sirfa\n                  </label>\n                  <input\n                    id='sifraZubara'\n                    type='password'\n                    className='input'\n                    name='sifraZ'\n                    value={sifraZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button'\n                    value='Registruj se'\n                  />\n                </div>\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button1'\n                    value='Kreiraj ordinaciju'\n                    onClick={() => history.push('/register/ordinacija')}\n                  />\n                </div>\n              </div>\n            </form>\n            <form onSubmit={onSubmitK}>\n              <div className='sign-up-htm'>\n                <div className='group'>\n                  <label for='imeKorisnika' className='label'>\n                    Ime\n                  </label>\n                  <input\n                    id='imeKorisnika'\n                    type='text'\n                    className='input'\n                    name='imeK'\n                    value={imeK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='prezimeKorisnika' className='label'>\n                    Prezime\n                  </label>\n                  <input\n                    id='prezimeKorisnika'\n                    type='text'\n                    className='input'\n                    name='prezimeK'\n                    value={prezimeK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='telefonKorisnika' className='label'>\n                    Telefon\n                  </label>\n                  <input\n                    id='telefonKorisnika'\n                    type='munber'\n                    className='input'\n                    name='telefonK'\n                    value={telefonK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='usernameKorisnika' className='label'>\n                    Username\n                  </label>\n                  <input\n                    id='usernameKorisnika'\n                    type='text'\n                    className='input'\n                    name='usernameK'\n                    value={usernameK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='sifraKorisnika' className='label'>\n                    Sifra\n                  </label>\n                  <input\n                    id='sifraKorisnika'\n                    type='password'\n                    className='input'\n                    name='sifraK'\n                    value={sifraK}\n                    onChange={onChange}\n                  />\n                </div>\n\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button'\n                    value='Registruj se'\n                  />\n                </div>\n\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button1'\n                    value='Student si?'\n                    onClick={() => history.push('/register/student')}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(Register);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterStudent.js",["153","154"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\n\nconst RegisterStudent = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    // username: '',\n    // sifra: '',\n    ime: '',\n    prezime: '',\n    grad: '',\n    telefon: '',\n    godina: '',\n    prosek: '',\n  });\n\n  const history = useHistory();\n\n  const {\n    // username,\n    // sifra,\n    ime,\n    prezime,\n    grad,\n    telefon,\n    godina,\n    prosek,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      //   username,\n      //   sifra,\n      ime,\n      prezime,\n      grad,\n      telefon,\n      godina,\n      prosek,\n    };\n    registracija(zaSlanje, 'Student');\n  };\n  return (\n    <div className='terza1'>\n      <div class='login'>\n        <h1>Register</h1>\n        <form onSubmit={onSubmit}>\n          {/* <input\n            type='text'\n            name='username'\n            placeholder='Username'\n            required='required'\n            value={username}\n            onChange={onChange}\n          />\n          <input\n            type='password'\n            name='sifra'\n            placeholder='Password'\n            required='required'\n            value={sifra}\n            onChange={onChange}\n          /> */}\n          <input\n            type='text'\n            name='ime'\n            placeholder='Ime'\n            required='required'\n            value={ime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='prezime'\n            placeholder='Prezime'\n            required='required'\n            value={prezime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='grad'\n            placeholder='Grad'\n            required='required'\n            value={grad}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='telefon'\n            placeholder='Telefon'\n            required='required'\n            value={telefon}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='godina'\n            placeholder='Godina'\n            required='required'\n            value={godina}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='prosek'\n            placeholder='Prosek'\n            required='required'\n            value={prosek}\n            onChange={onChange}\n          />\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\n            Registruj se\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nRegisterStudent.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(RegisterStudent);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Zubar.js",["155","156","157"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterOrdinacija.js",["158","159"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\n\nconst RegisterOrdinacija = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    ime: '',\n    grad: '',\n    adresa: '',\n  });\n\n  const history = useHistory();\n\n  const { ime, grad, adresa } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime,\n      grad,\n      adresa,\n    };\n    registracija(zaSlanje, 'Ordinacija');\n  };\n  return (\n    <div className='terza1'>\n      <div class='login'>\n        <h1>Register</h1>\n        <form onSubmit={onSubmit}>\n          <input\n            type='text'\n            name='ime'\n            placeholder='Ime'\n            required='required'\n            value={ime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='grad'\n            placeholder='Grad'\n            required='required'\n            value={grad}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='adresa'\n            placeholder='Adresa'\n            required='required'\n            value={adresa}\n            onChange={onChange}\n          />\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\n            Registruj ordinaciju\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nRegisterOrdinacija.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(RegisterOrdinacija);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Login.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarPageZubar.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/auth.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/index.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/types.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/auth.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/DodajTemu.js",["160"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/FormaDodaj.js",["161"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Poruke.js",["162","163"],"import React, { useEffect, useState } from 'react';\nimport { MDBNotification, MDBContainer } from 'mdbreact';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\n\nconst Poruke = (props, { vratiSvePoruke }) => {\n  const [poruke, setPoruke] = useState([]);\n  // const datumi = [];\n  const fetchData = async () => {\n    const res = await axios.get(\n      '/vratiPrivatnePoruke/' + props.match.params.telefon\n    );\n    setPoruke(res.data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // useEffect(() => {\n  //   konvertuj();\n  //   console.log(tmp);\n  // }, [poruke]);\n  // const konvertuj = () => {\n  //   poruke.forEach((p) => {\n  //     let d = new Date(Date.parse(p.poruka.vreme));\n  //     setTmp([...tmp, 'terza']);\n  //   });\n  // };\n  return (\n    <div className='terza3'>\n      <MDBContainer className='opa'>\n        {poruke &&\n          poruke.map((p) => (\n            <div>\n              {p.poruka.vreme}\n              <MDBNotification\n                show\n                fade\n                iconClassName='text-primary'\n                title={`${p.student.ime} ${p.student.prezime}`}\n                message={p.poruka.tekst}\n                // text={porukeNiz[0]}\n              />\n            </div>\n          ))}\n      </MDBContainer>\n    </div>\n  );\n};\n\nPoruke.propTypes = {\n  vratiSvePoruke: PropTypes.func.isRequired,\n};\n\nexport default connect()(Poruke);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluga.js",["164","165"],"import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { SVE_PORUKE, SVE_USLUGE } from '../../actions/types';\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBIcon,\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBadge,\n} from 'mdbreact';\n\nconst akcija = (usluga) => (dispatch) => {\n  console.log(usluga);\n  dispatch({\n    type: SVE_PORUKE,\n    payload: usluga,\n  });\n};\n\nconst Usluga = ({ user, sveUsluge, akcija }) => {\n  const [uslugaPodaci, setUslugaPodaci] = useState({\n    naziv: '',\n    cena: '',\n    opis: '',\n    username: user.username,\n  });\n\n  const { naziv, cena, opis, username } = uslugaPodaci;\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      username,\n      naziv,\n      cena,\n      opis,\n    };\n    console.log(zaSlanje);\n    const element = (\n      <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n        {opis}\n        <MDBBadge color='primary' pill>\n          {cena}\n        </MDBBadge>\n      </MDBListGroupItem>\n    );\n    ReactDOM.render(element, document.getElementById('root1'));\n\n    const res = await axios.put('/novaUsluga', zaSlanje);\n    console.log(res.data);\n    akcija(zaSlanje);\n  };\n  const onChange = (e) =>\n    setUslugaPodaci({ ...uslugaPodaci, [e.target.name]: e.target.value });\n\n  return (\n    <MDBContainer className='terza5'>\n      <MDBRow>\n        <MDBCol md='6'>\n          <form onSubmit={onSubmit}>\n            <p className='h4 text-center mb-4'>Dodaj novu uslugu</p>\n            <label htmlFor='defaultFormContactNameEx' className='grey-text'>\n              Naziv usluge\n            </label>\n            <input\n              type='text'\n              id='defaultFormContactNameEx'\n              className='form-control'\n              name='naziv'\n              value={naziv}\n              onChange={onChange}\n            />\n            <br />\n            <label htmlFor='defaultFormContactEmailEx' className='grey-text'>\n              Cena\n            </label>\n            <input\n              type='text'\n              id='defaultFormContactEmailEx'\n              className='form-control'\n              name='cena'\n              value={cena}\n              onChange={onChange}\n            />\n            <br />\n            <label htmlFor='defaultFormContactMessageEx' className='grey-text'>\n              Opis\n            </label>\n            <textarea\n              type='text'\n              id='defaultFormContactMessageEx'\n              className='form-control'\n              rows='3'\n              name='opis'\n              value={opis}\n              onChange={onChange}\n            />\n            <div className='text-center mt-4'>\n              <MDBBtn color='warning' outline type='submit'>\n                Dodaj\n                <MDBIcon far icon='paper-plane' className='ml-2' />\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n        <MDBCol md='6' className='terza6'>\n          <p className='h4  mb-4'>Lista usluga koje nudim</p>\n          <MDBListGroup className='terzinjo' style={{ width: '31rem' }}>\n            {sveUsluge.map((usl) => (\n              <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n                {usl.naziv}\n                <MDBBadge color='primary' pill>\n                  {usl.cena}\n                </MDBBadge>\n              </MDBListGroupItem>\n            ))}\n            <MDBListGroupItem\n              className='d-flex justify-content-between align-items-center'\n              id='root1'\n            >\n              <MDBBadge color='primary' pill></MDBBadge>\n            </MDBListGroupItem>\n          </MDBListGroup>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nUsluga.propTypes = {\n  user: PropTypes.object.isRequired,\n  sveUsluge: PropTypes.array.isRequired,\n  akcija: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  sveUsluge: state.dashboard.sveUsluge,\n});\n\nexport default connect(mapStateToProps, { akcija })(Usluga);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UrediProfil.js",["166","167"],"import React, { Fragment, useState } from 'react';\nimport { MDBInput, MDBBtn } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst UrediProfil = ({ user }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    sifra: '',\n    telefon: '',\n    trenutniUsername: user.username,\n  });\n  const { username, sifra, telefon, trenutniUsername } = formData;\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      username,\n      sifra,\n      telefon,\n    };\n    console.log(zaSlanje);\n  };\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <MDBInput\n          label='Promeni username'\n          outline\n          size='lg'\n          background\n          name='username'\n          value={username}\n          onChange={onChange}\n        />\n        ;\n        <MDBInput\n          label='Promeni sifru'\n          outline\n          size='lg'\n          background\n          name='sifra'\n          value={sifra}\n          onChange={onChange}\n        />\n        ;\n        <MDBInput\n          label='Promeni telefon'\n          outline\n          size='lg'\n          background\n          name='telefon'\n          value={telefon}\n          onChange={onChange}\n        />\n        ;\n        <MDBBtn color='success' size='lg' type='submit'>\n          Sacuvaj izmene\n        </MDBBtn>\n      </form>\n    </Fragment>\n  );\n};\nUrediProfil.propTypes = {\n  user: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, null)(UrediProfil);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/dashboard.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/PrikaziTemu.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Dashboard.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Forum.js",["168"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Tema.js",["169"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Komentari.js",["170","171","172"],"import React, { useState, useEffect } from 'react';\nimport { MDBListGroup, MDBListGroupItem, MDBContainer } from 'mdbreact';\nimport axios from 'axios';\n\nconst Komentari = (props) => {\n  const [komentari, setKomentari] = useState([]);\n  useEffect(async () => {\n    const res = await axios.get(\n      'http://localhost:5000/vratiKomentareOZubaru/' +\n        props.match.params.telefon\n    );\n    setKomentari(res.data);\n  }, []);\n  return (\n    <div className='comm'>\n      <MDBListGroup style={{ width: '25rem' }}>\n        {komentari.map((k) => (\n          <MDBListGroupItem>\n            <div className='d-flex w-100 justify-content-between'>\n              <h5 className='mb-1'>Komentarisao:{k.ime}</h5>\n              <small>3 days ago</small>\n            </div>\n            <p className='mb-1 terrr'>{k.komentar}</p>\n            <small style={{ color: 'green' }}>Ocena:{k.ocena}</small>\n          </MDBListGroupItem>\n        ))}\n      </MDBListGroup>\n    </div>\n  );\n};\n\nexport default Komentari;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZubarPogled.js",["173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  MDBIcon,\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBContainer,\n  MDBBadge,\n  MDBBtn,\n} from 'mdbreact';\n\nconst ZubarPogled = (props) => {\n  const [usluge, setUsluge] = useState([]);\n  useEffect(async () => {\n    const res = await axios.get(\n      'http://localhost:5000/vratiUslugeZubara/' + props.match.params.username\n    );\n    setUsluge(res.data);\n    const dugme = document.getElementById('dugme');\n    const res1 = await axios.get(\n      `/daLiPreporucujem/${props.match.params.usernameTrenutnog}/${props.match.params.username}`\n    );\n    dugme.disabled = res1.data;\n  }, []);\n  const klik = async () => {\n    const res = await axios.put('http://localhost:5000/preporuciZubara', {\n      usernameZubaraTrenutnog: props.match.params.usernameTrenutnog,\n      usernameZubaraZaPreporuku: props.match.params.username,\n    });\n    window.location.reload();\n  };\n  return (\n    <div className='pogled'>\n      <div className='gore'>\n        <h2>{props.match.params.username}</h2>\n        <MDBBtn id='dugme' color='success' onClick={klik}>\n          Preporuci\n        </MDBBtn>\n      </div>\n      <div className='dole'>\n        <h2>Usluge koje nudim:</h2>\n\n        <MDBListGroup style={{ width: '26rem' }}>\n          {usluge.map((u) => (\n            <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n              {u.naziv}{' '}\n              <MDBBadge color='primary' pill>\n                {u.cena}\n              </MDBBadge>\n            </MDBListGroupItem>\n          ))}\n        </MDBListGroup>\n      </div>\n    </div>\n  );\n};\n\nexport default ZubarPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/TerminiZubar.js",["178","179","180","181"],"import React, { Component } from 'react';\nimport { DayPilotScheduler, DayPilot } from 'daypilot-pro-react';\nimport axios from 'axios';\nimport { MDBIcon, MDBBtn } from 'mdbreact';\nimport nextId from 'react-id-generator';\n\nclass TerminiZubar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usluge: [],\n      terminiNeodobreni: [],\n      ime1: 'Danilo',\n      ime2: 'Marija',\n      startDate: '2021-01-23',\n      days: 31,\n      scale: 'Day',\n      eventHeight: 45,\n      cellWidth: 40,\n      timeHeaders: [{ groupBy: 'Month' }, { groupBy: 'Day', format: 'd' }],\n      cellWidthSpec: 'Auto',\n      resources: [\n        // { name: 'Resource B', id: 'B' },\n        // { name: 'Resource C', id: 'C' },\n        // { name: 'Resource D', id: 'D' },\n        // { name: 'Resource E', id: 'E' },\n        // { name: 'Resource F', id: 'F' },\n        // { name: 'Resource G', id: 'G' },\n      ],\n      events: [\n        // {\n        //   id: 1,\n        //   text: 'Event 1',\n        //   start: '2021-10-01',\n        //   end: '2021-10-01',\n        //   resource: 'A0',\n        // },\n      ],\n    };\n  }\n  componentDidMount() {\n    fetch('/vratiTermineZubaraOdobrene/' + this.props.match.params.telefon, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) =>\n        data.forEach((t) => {\n          let zaTabelu = {\n            id: nextId(),\n            //ovde mitke da mi vrati i ime korisnika koji je potvrdio termin\n            text: t.ime,\n            start: t.datum,\n            end: t.datum,\n            resource: t.imeUsluge,\n            backColor: '#ff2626',\n          };\n          this.setState((state) => ({\n            events: [...state.events, zaTabelu],\n          }));\n        })\n      );\n    fetch(`/vratiTermineZubaraNeOdobrene/${this.props.match.params.telefon}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        this.setState({ terminiNeodobreni: data });\n      });\n\n    fetch(`/vratiUslugeZubara/${this.props.match.params.username}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ usluge: data });\n        data.forEach((d, index) => {\n          let dodaj = { name: d.naziv, id: d.naziv };\n          this.setState((state) => ({\n            resources: [...state.resources, dodaj],\n          }));\n        });\n      });\n  }\n  brisi(vrednost) {\n    let div = document.querySelector('.terzar' + vrednost);\n    div.remove();\n  }\n  async funkcija(ind) {\n    let obj = {\n      datum: this.state.terminiNeodobreni[ind].datum,\n      telefon: this.props.match.params.telefon,\n    };\n    console.log(obj);\n    const res = await axios.put('/potvrdiTermin', obj);\n    // console.log(res);\n    window.location.reload();\n  }\n\n  render() {\n    var { ...config } = this.state;\n    return (\n      <div>\n        <DayPilotScheduler\n          {...config}\n          onEventMoved={(args) => {\n            console.log(\n              'Event moved: ',\n              args.e.data.id,\n              args.newStart,\n              args.newEnd,\n              args.newResource\n            );\n          }}\n          onTimeRangeSelected={(args) => {\n            DayPilot.Modal.prompt('Upisite naziv korisnika', '').then(\n              (modal) => {\n                this.scheduler.clearSelection();\n                if (!modal.result) {\n                  return;\n                }\n                this.scheduler.events.add({\n                  id: DayPilot.guid(),\n                  text: modal.result,\n                  start: args.start,\n                  end: args.end,\n                  resource: args.resource,\n                });\n                console.log(modal.result);\n                var datum = args.start.toString('yyyy-MM-dd');\n                var telefon = this.props.match.params.telefon;\n              }\n            );\n          }}\n          onEventMoved={(args) =>\n            this.scheduler.message(\n              'Promenili ste datum pregleda: ' + args.e.data.text\n            )\n          }\n          ref={(component) => {\n            this.scheduler = component && component.control;\n          }}\n        />\n        <h3 style={{ color: 'black', marginTop: '20px' }}>\n          Termini na cekanju\n        </h3>\n        {this.state.terminiNeodobreni &&\n          this.state.terminiNeodobreni.map((t, index) => (\n            <div className='terzica'>\n              <div className={`terzar${index}`}>\n                {t.datum}&nbsp;&nbsp;&nbsp;\n                <MDBIcon icon='arrow-right' />\n                &nbsp; Ime: &nbsp;\n                {t.ime + ','}&nbsp;\n                {'Opis:'} &nbsp;{t.imeUsluge}&nbsp; &nbsp;\n                <MDBBtn\n                  color='success'\n                  size='sm'\n                  onClick={() => this.funkcija(index)}\n                >\n                  Potvrdi\n                </MDBBtn>\n                <MDBBtn\n                  color='danger'\n                  size='sm'\n                  onClick={() => this.brisi(index)}\n                >\n                  Odbij\n                </MDBBtn>\n                &nbsp;\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default TerminiZubar;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarKorisnik.js",["182","183","184","185","186","187"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/KorisnikPogled.js",["188"],"import React, { useState, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\n\nconst KorisnikPogled = (props) => {\n  const [pitanja, setPitanja] = useState([]);\n  useEffect(() => {\n    fetch(`/pitanjaPostavioKorisnik/${props.match.params.telefonK}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => setPitanja(data))\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n  return (\n    <div className='comm1'>\n      <h1>Pitanja koje je korisnik postavljao</h1>\n      {pitanja.map((p) => (\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\n          <MDBCardBody>\n            <MDBCardTitle>{p.naslov + '?'}</MDBCardTitle>\n            <MDBCardText>{p.tekstPitanja}</MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      ))}\n    </div>\n  );\n};\n\nexport default KorisnikPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/StudentPogled.js",["189"],"import React, { useState, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\n\nconst StudentPogled = (props) => {\n  const [odgovori, setOdgovori] = useState([]);\n  useEffect(() => {\n    fetch(`/pitanjaOdgovorioStudent/${props.match.params.telefonS}`)\n      .then((res) => res.json())\n      .then((data) => setOdgovori(data))\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n  return (\n    <div className='comm1'>\n      <h1 style={{ color: 'blue' }}>Odgovori na pitanja</h1>\n      {odgovori.map((o) => (\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\n          <MDBCardBody>\n            <MDBCardTitle>{o.pitanje + '?'}</MDBCardTitle>\n            <p\n              style={{\n                display: 'inline',\n                color: 'blue',\n                fontWeight: '600',\n                fontFamily: 'arial',\n              }}\n            >{`Pitanje je postavio:`}</p>\n            <p style={{ display: 'inline', marginLeft: '10px', color: 'red' }}>\n              {o.ime}\n            </p>\n            <MDBCardText style={{ color: 'blue' }}>\n              <p\n                style={{\n                  display: 'inline',\n                  color: 'blue',\n                  fontWeight: '600',\n                  fontFamily: 'arial',\n                }}\n              >{`Odgovor ovog korisnika je:`}</p>\n              <p\n                style={{ display: 'inline', marginLeft: '10px', color: 'red' }}\n              >\n                {o.odgovor}\n              </p>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      ))}\n    </div>\n  );\n};\n\nexport default StudentPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZahteviStudenata.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Notification.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluge.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UslugeDashboard.js",["190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"199","line":1,"column":37,"nodeType":"197","messageId":"198","endLine":1,"endColumn":46},{"ruleId":"195","severity":1,"message":"200","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"201","line":2,"column":16,"nodeType":"197","messageId":"198","endLine":2,"endColumn":24},{"ruleId":"195","severity":1,"message":"202","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"203","line":20,"column":9,"nodeType":"197","messageId":"198","endLine":20,"endColumn":16},{"ruleId":"195","severity":1,"message":"204","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":9,"column":1,"nodeType":"207","messageId":"208","endLine":11,"endColumn":2},{"ruleId":"205","severity":1,"message":"206","line":12,"column":1,"nodeType":"207","messageId":"208","endLine":14,"endColumn":2},{"ruleId":"195","severity":1,"message":"200","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"203","line":15,"column":9,"nodeType":"197","messageId":"198","endLine":15,"endColumn":16},{"ruleId":"195","severity":1,"message":"209","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":22},{"ruleId":"195","severity":1,"message":"210","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":19},{"ruleId":"195","severity":1,"message":"211","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":28},{"ruleId":"212","severity":1,"message":"213","line":19,"column":6,"nodeType":"214","endLine":19,"endColumn":8,"suggestions":"215"},{"ruleId":"195","severity":1,"message":"199","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"216","line":6,"column":22,"nodeType":"197","messageId":"198","endLine":6,"endColumn":32},{"ruleId":"195","severity":1,"message":"204","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"217","line":14,"column":37,"nodeType":"197","messageId":"198","endLine":14,"endColumn":53},{"ruleId":"195","severity":1,"message":"209","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":22},{"ruleId":"195","severity":1,"message":"209","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":22},{"ruleId":"195","severity":1,"message":"218","line":2,"column":42,"nodeType":"197","messageId":"198","endLine":2,"endColumn":54},{"ruleId":"212","severity":1,"message":"219","line":7,"column":13,"nodeType":"220","endLine":13,"endColumn":4},{"ruleId":"212","severity":1,"message":"221","line":13,"column":6,"nodeType":"214","endLine":13,"endColumn":8,"suggestions":"222"},{"ruleId":"195","severity":1,"message":"223","line":4,"column":3,"nodeType":"197","messageId":"198","endLine":4,"endColumn":10},{"ruleId":"195","severity":1,"message":"218","line":7,"column":3,"nodeType":"197","messageId":"198","endLine":7,"endColumn":15},{"ruleId":"212","severity":1,"message":"219","line":14,"column":13,"nodeType":"220","endLine":24,"endColumn":4},{"ruleId":"212","severity":1,"message":"224","line":24,"column":6,"nodeType":"214","endLine":24,"endColumn":8,"suggestions":"225"},{"ruleId":"195","severity":1,"message":"226","line":26,"column":11,"nodeType":"197","messageId":"198","endLine":26,"endColumn":14},{"ruleId":"195","severity":1,"message":"226","line":96,"column":11,"nodeType":"197","messageId":"198","endLine":96,"endColumn":14},{"ruleId":"195","severity":1,"message":"227","line":131,"column":21,"nodeType":"197","messageId":"198","endLine":131,"endColumn":26},{"ruleId":"195","severity":1,"message":"228","line":132,"column":21,"nodeType":"197","messageId":"198","endLine":132,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":136,"column":11,"nodeType":"231","endLine":140,"endColumn":12},{"ruleId":"195","severity":1,"message":"204","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":13},{"ruleId":"195","severity":1,"message":"232","line":10,"column":3,"nodeType":"197","messageId":"198","endLine":10,"endColumn":19},{"ruleId":"195","severity":1,"message":"233","line":11,"column":3,"nodeType":"197","messageId":"198","endLine":11,"endColumn":14},{"ruleId":"195","severity":1,"message":"234","line":16,"column":10,"nodeType":"197","messageId":"198","endLine":16,"endColumn":23},{"ruleId":"195","severity":1,"message":"235","line":16,"column":25,"nodeType":"197","messageId":"198","endLine":16,"endColumn":35},{"ruleId":"195","severity":1,"message":"236","line":16,"column":37,"nodeType":"197","messageId":"198","endLine":16,"endColumn":49},{"ruleId":"212","severity":1,"message":"237","line":15,"column":6,"nodeType":"214","endLine":15,"endColumn":8,"suggestions":"238"},{"ruleId":"212","severity":1,"message":"239","line":13,"column":6,"nodeType":"214","endLine":13,"endColumn":8,"suggestions":"240"},{"ruleId":"195","severity":1,"message":"204","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'json' is defined but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'NavbarKorisnik' is defined but never used.","'MultiSelect' is defined but never used.","'bindActionCreators' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'SVE_USLUGE' is defined but never used.","'trenutniUsername' is assigned a value but never used.","'MDBContainer' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.match.params.telefon'. Either include it or remove the dependency array.",["244"],"'MDBIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.username' and 'props.match.params.usernameTrenutnog'. Either include them or remove the dependency array.",["245"],"'res' is assigned a value but never used.","'datum' is assigned a value but never used.","'telefon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'SVI_KORISNICI' is defined but never used.","'SVI_ZUBARI' is defined but never used.","'SVI_STUDENTI' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.telefonK'. Either include it or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'props.match.params.telefonS'. Either include it or remove the dependency array.",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [fetchData]",{"range":"258","text":"259"},"Update the dependencies array to be: [props.match.params.telefon]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.match.params.username, props.match.params.usernameTrenutnog]",{"range":"262","text":"263"},"Update the dependencies array to be: [props.match.params.telefonK]",{"range":"264","text":"265"},"Update the dependencies array to be: [props.match.params.telefonS]",{"range":"266","text":"267"},[578,580],"[fetchData]",[423,425],"[props.match.params.telefon]",[667,669],"[props.match.params.username, props.match.params.usernameTrenutnog]",[474,476],"[props.match.params.telefonK]",[446,448],"[props.match.params.telefonS]"]
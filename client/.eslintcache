[{"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/index.js":"1","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/App.js":"2","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/store.js":"3","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Register.js":"4","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterStudent.js":"5","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Zubar.js":"6","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterOrdinacija.js":"7","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Login.js":"8","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarPageZubar.js":"9","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/auth.js":"10","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/index.js":"11","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/types.js":"12","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/auth.js":"13","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/DodajTemu.js":"14","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/FormaDodaj.js":"15","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Poruke.js":"16","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluga.js":"17","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UrediProfil.js":"18","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/dashboard.js":"19","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/PrikaziTemu.js":"20","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Dashboard.js":"21","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Forum.js":"22","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Tema.js":"23","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Komentari.js":"24","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZubarPogled.js":"25","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/TerminiZubar.js":"26","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarKorisnik.js":"27","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/KorisnikPogled.js":"28","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/StudentPogled.js":"29","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZahteviStudenata.js":"30","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Notification.js":"31","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluge.js":"32","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UslugeDashboard.js":"33"},{"size":289,"mtime":1611241015052,"results":"34","hashOfConfig":"35"},{"size":3358,"mtime":1612036975964,"results":"36","hashOfConfig":"35"},{"size":946,"mtime":1611326066465,"results":"37","hashOfConfig":"35"},{"size":8298,"mtime":1611241015048,"results":"38","hashOfConfig":"35"},{"size":3062,"mtime":1611326066461,"results":"39","hashOfConfig":"35"},{"size":3172,"mtime":1612031322610,"results":"40","hashOfConfig":"35"},{"size":1812,"mtime":1611326066461,"results":"41","hashOfConfig":"35"},{"size":1835,"mtime":1611326066461,"results":"42","hashOfConfig":"35"},{"size":5275,"mtime":1612027051168,"results":"43","hashOfConfig":"35"},{"size":1380,"mtime":1612089811079,"results":"44","hashOfConfig":"35"},{"size":159,"mtime":1611326066465,"results":"45","hashOfConfig":"35"},{"size":730,"mtime":1611334873203,"results":"46","hashOfConfig":"35"},{"size":1076,"mtime":1611950779880,"results":"47","hashOfConfig":"35"},{"size":352,"mtime":1612033689270,"results":"48","hashOfConfig":"35"},{"size":3513,"mtime":1612037596774,"results":"49","hashOfConfig":"35"},{"size":1356,"mtime":1612027051168,"results":"50","hashOfConfig":"35"},{"size":3605,"mtime":1612027051180,"results":"51","hashOfConfig":"35"},{"size":1737,"mtime":1611780927749,"results":"52","hashOfConfig":"35"},{"size":1113,"mtime":1611334873203,"results":"53","hashOfConfig":"35"},{"size":5106,"mtime":1612094631098,"results":"54","hashOfConfig":"35"},{"size":4546,"mtime":1612094677074,"results":"55","hashOfConfig":"35"},{"size":581,"mtime":1612033637481,"results":"56","hashOfConfig":"35"},{"size":371,"mtime":1612033746890,"results":"57","hashOfConfig":"35"},{"size":1312,"mtime":1612027051168,"results":"58","hashOfConfig":"35"},{"size":1673,"mtime":1611780927749,"results":"59","hashOfConfig":"35"},{"size":5638,"mtime":1612027051168,"results":"60","hashOfConfig":"35"},{"size":3481,"mtime":1612034593711,"results":"61","hashOfConfig":"35"},{"size":904,"mtime":1612027051168,"results":"62","hashOfConfig":"35"},{"size":1681,"mtime":1612027051168,"results":"63","hashOfConfig":"35"},{"size":304,"mtime":1612027051180,"results":"64","hashOfConfig":"35"},{"size":1998,"mtime":1612027051168,"results":"65","hashOfConfig":"35"},{"size":729,"mtime":1612036191632,"results":"66","hashOfConfig":"35"},{"size":1830,"mtime":1612036757880,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"18ofzzx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"70"},"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/index.js",[],["153","154"],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/App.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/store.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Register.js",["155","156","157","158","159"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\nimport { json } from 'body-parser';\n\nconst Register = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    imeZ: '',\n    prezimeZ: '',\n    gradZ: '',\n    telefonZ: '',\n    usernameZ: '',\n    sifraZ: '',\n    imeK: '',\n    prezimeK: '',\n    telefonK: '',\n    usernameK: '',\n    sifraK: '',\n  });\n\n  const {\n    imeZ,\n    prezimeZ,\n    gradZ,\n    telefonZ,\n    usernameZ,\n    sifraZ,\n    imeK,\n    prezimeK,\n    telefonK,\n    usernameK,\n    sifraK,\n  } = formData;\n\n  const history = useHistory();\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime: imeZ,\n      prezime: prezimeZ,\n      grad: gradZ,\n      telefon: telefonZ,\n      username: usernameZ,\n      sifra: sifraZ,\n    };\n    registracija(zaSlanje, 'Zubar');\n    history.push('/');\n  };\n\n  const onSubmitK = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime: imeK,\n      prezime: prezimeK,\n      telefon: telefonK,\n      username: usernameK,\n      sifra: sifraK,\n    };\n    registracija(zaSlanje, 'Korisnik');\n    history.push('/');\n  };\n\n  return (\n    <div className='terza'>\n      <div className='login-wrap'>\n        <div className='login-html'>\n          <input id='tab-1' type='radio' name='tab' className='sign-in' />\n          <label for='tab-1' className='tab'>\n            Zubar\n          </label>\n          <input id='tab-2' type='radio' name='tab' className='sign-up' />\n          <label for='tab-2' className='tab'>\n            Korisnik\n          </label>\n          <div className='login-form'>\n            <form onSubmit={onSubmit}>\n              <div className='sign-in-htm'>\n                <div className='group'>\n                  <label for='imeZubara' className='label'>\n                    Ime\n                  </label>\n                  <input\n                    id='imeZubara'\n                    type='text'\n                    className='input'\n                    name='imeZ'\n                    value={imeZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='prezimeZubara' className='label'>\n                    Prezime\n                  </label>\n                  <input\n                    id='prezimeZubara'\n                    type='text'\n                    className='input'\n                    name='prezimeZ'\n                    value={prezimeZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='gradZubara' className='label'>\n                    Grad\n                  </label>\n                  <input\n                    id='gradZubara'\n                    type='text'\n                    className='input'\n                    name='gradZ'\n                    value={gradZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='telefonZubara' className='label'>\n                    Telefon\n                  </label>\n                  <input\n                    id='telefonZubara'\n                    type='number'\n                    className='input'\n                    name='telefonZ'\n                    value={telefonZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='usernameZubara' className='label'>\n                    Username\n                  </label>\n                  <input\n                    id='username'\n                    type='text'\n                    className='input'\n                    name='usernameZ'\n                    value={usernameZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='sifraZubara' className='label'>\n                    Sirfa\n                  </label>\n                  <input\n                    id='sifraZubara'\n                    type='password'\n                    className='input'\n                    name='sifraZ'\n                    value={sifraZ}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button'\n                    value='Registruj se'\n                  />\n                </div>\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button1'\n                    value='Kreiraj ordinaciju'\n                    onClick={() => history.push('/register/ordinacija')}\n                  />\n                </div>\n              </div>\n            </form>\n            <form onSubmit={onSubmitK}>\n              <div className='sign-up-htm'>\n                <div className='group'>\n                  <label for='imeKorisnika' className='label'>\n                    Ime\n                  </label>\n                  <input\n                    id='imeKorisnika'\n                    type='text'\n                    className='input'\n                    name='imeK'\n                    value={imeK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='prezimeKorisnika' className='label'>\n                    Prezime\n                  </label>\n                  <input\n                    id='prezimeKorisnika'\n                    type='text'\n                    className='input'\n                    name='prezimeK'\n                    value={prezimeK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='telefonKorisnika' className='label'>\n                    Telefon\n                  </label>\n                  <input\n                    id='telefonKorisnika'\n                    type='munber'\n                    className='input'\n                    name='telefonK'\n                    value={telefonK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='usernameKorisnika' className='label'>\n                    Username\n                  </label>\n                  <input\n                    id='usernameKorisnika'\n                    type='text'\n                    className='input'\n                    name='usernameK'\n                    value={usernameK}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className='group'>\n                  <label for='sifraKorisnika' className='label'>\n                    Sifra\n                  </label>\n                  <input\n                    id='sifraKorisnika'\n                    type='password'\n                    className='input'\n                    name='sifraK'\n                    value={sifraK}\n                    onChange={onChange}\n                  />\n                </div>\n\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button'\n                    value='Registruj se'\n                  />\n                </div>\n\n                <div className='group'>\n                  <input\n                    type='submit'\n                    className='button1'\n                    value='Student si?'\n                    onClick={() => history.push('/register/student')}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(Register);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterStudent.js",["160","161"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\n\nconst RegisterStudent = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    // username: '',\n    // sifra: '',\n    ime: '',\n    prezime: '',\n    grad: '',\n    telefon: '',\n    godina: '',\n    prosek: '',\n  });\n\n  const history = useHistory();\n\n  const {\n    // username,\n    // sifra,\n    ime,\n    prezime,\n    grad,\n    telefon,\n    godina,\n    prosek,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      //   username,\n      //   sifra,\n      ime,\n      prezime,\n      grad,\n      telefon,\n      godina,\n      prosek,\n    };\n    registracija(zaSlanje, 'Student');\n  };\n  return (\n    <div className='terza1'>\n      <div class='login'>\n        <h1>Register</h1>\n        <form onSubmit={onSubmit}>\n          {/* <input\n            type='text'\n            name='username'\n            placeholder='Username'\n            required='required'\n            value={username}\n            onChange={onChange}\n          />\n          <input\n            type='password'\n            name='sifra'\n            placeholder='Password'\n            required='required'\n            value={sifra}\n            onChange={onChange}\n          /> */}\n          <input\n            type='text'\n            name='ime'\n            placeholder='Ime'\n            required='required'\n            value={ime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='prezime'\n            placeholder='Prezime'\n            required='required'\n            value={prezime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='grad'\n            placeholder='Grad'\n            required='required'\n            value={grad}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='telefon'\n            placeholder='Telefon'\n            required='required'\n            value={telefon}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='godina'\n            placeholder='Godina'\n            required='required'\n            value={godina}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='prosek'\n            placeholder='Prosek'\n            required='required'\n            value={prosek}\n            onChange={onChange}\n          />\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\n            Registruj se\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nRegisterStudent.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(RegisterStudent);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Zubar.js",["162","163","164"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavbarPageZubar from './NavbarPageZubar';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { MDBBtn } from 'mdbreact';\n\n{\n  /* <i class='fas fa-fw fa-user-graduate'></i> */\n}\n{\n  /* <i class='fas fa-fw fa-tooth'></i> */\n}\n\nconst Zubar = ({ zubar, ordinacija, zubari, korisnici, studenti }) => {\n  const [podaciZubar, setPodaciZubar] = useState({});\n  const [podaciOrdinacije, setPodaciOrdinacije] = useState({});\n  // const [zubariNiz, setZubariNiz] = useState([]);\n  useEffect(() => {\n    setPodaciZubar(zubar);\n  }, [zubar]);\n  useEffect(() => {\n    setPodaciOrdinacije(ordinacija);\n  }, [ordinacija]);\n  const history = useHistory();\n  // useEffect(() => {\n  //   setZubariNiz(zubari);\n  // }, [zubari]);\n\n  return (\n    <Fragment>\n      <NavbarPageZubar\n        telefon={podaciZubar && podaciZubar.telefon}\n        ime={podaciOrdinacije && podaciOrdinacije.ime}\n        username={podaciZubar && podaciZubar.username}\n      />\n      <div className=\"glavni\">\n        {zubari &&\n          zubari.map((zubar) => (\n            <div className=\"glavnic\">\n              <h3>\n                <i class=\"fas fa-fw fa-tooth\"></i>\n                {zubar.ime} {zubar.prezime}\n              </h3>\n              <MDBBtn\n                color=\"default\"\n                onClick={() =>\n                  history.push(\n                    \"/zubarPogled/\" +\n                      zubar.username +\n                      \"/\" +\n                      podaciZubar.username\n                  )\n                }\n              >\n                Pogledaj Profil\n              </MDBBtn>\n            </div>\n          ))}\n        {korisnici &&\n          korisnici.map((k) => (\n            <div className=\"glavnic\">\n              <h3>\n                <i class=\"fas fa-fw fa-male\"></i>\n                {k.ime} {k.prezime}\n              </h3>\n              <MDBBtn\n                color=\"default\"\n                onClick={() => history.push(\"/korisnikPage/\" + k.telefon)}\n              >\n                Pogledaj Profil\n              </MDBBtn>\n            </div>\n          ))}\n        {studenti &&\n          studenti.map((s) => (\n            <div className=\"glavnic\">\n              <h3>\n                <i class=\"fas fa-fw fa-user-graduate\"></i>\n                {s.ime} {s.prezime}\n              </h3>\n              <MDBBtn\n                color=\"default\"\n                onClick={() => history.push(\"/studentPage/\" + s.telefon)}\n              >\n                Pogledaj Profil\n              </MDBBtn>\n            </div>\n          ))}\n      </div>\n    </Fragment>\n  );\n};\n\nZubar.propTypes = {\n  zubar: PropTypes.object,\n  ordinacija: PropTypes.object,\n  zubari: PropTypes.array,\n  korisnici: PropTypes.array,\n  studenti: PropTypes.array,\n};\nconst mapStateToProps = (state) => ({\n  zubar: state.auth.user,\n  ordinacija: state.dashboard.ordinacija,\n  zubari: state.dashboard.sviZubari,\n  korisnici: state.dashboard.sviKorisnici,\n  studenti: state.dashboard.sviStudenti,\n});\n\nexport default connect(mapStateToProps, null)(Zubar);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/RegisterOrdinacija.js",["165","166"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registracija } from '../../actions/auth';\n\nconst RegisterOrdinacija = ({ registracija }) => {\n  const [formData, setFormData] = useState({\n    ime: '',\n    grad: '',\n    adresa: '',\n  });\n\n  const history = useHistory();\n\n  const { ime, grad, adresa } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      ime,\n      grad,\n      adresa,\n    };\n    registracija(zaSlanje, 'Ordinacija');\n  };\n  return (\n    <div className='terza1'>\n      <div class='login'>\n        <h1>Register</h1>\n        <form onSubmit={onSubmit}>\n          <input\n            type='text'\n            name='ime'\n            placeholder='Ime'\n            required='required'\n            value={ime}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='grad'\n            placeholder='Grad'\n            required='required'\n            value={grad}\n            onChange={onChange}\n          />\n          <input\n            type='text'\n            name='adresa'\n            placeholder='Adresa'\n            required='required'\n            value={adresa}\n            onChange={onChange}\n          />\n          <button type='submit' class='btn btn-primary btn-block btn-large'>\n            Registruj ordinaciju\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nRegisterOrdinacija.propTypes = {\n  registracija: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { registracija })(RegisterOrdinacija);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/auth/Login.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarPageZubar.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/auth.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/index.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/actions/types.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/auth.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/DodajTemu.js",["167"],"import React, { Fragment } from \"react\";\nimport FormaDodaj from \"./FormaDodaj\";\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\n\nconst DodajTemu = (props) => {\n  return (\n    <Fragment>\n      {/* <NavbarKorisnik /> */}\n      {/* <br></br> */}\n      <FormaDodaj />\n    </Fragment>\n  );\n};\n\nDodajTemu.propTypes = {};\n\nexport default DodajTemu;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/FormaDodaj.js",["168"],"import React, { Component } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport MultiSelect from \"react-multi-select-component\";\nimport Select from \"react-select\";\n\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nclass FormaDodaj extends Component {\n  state = {\n    naslov: \"\",\n    tekst: \"\",\n    tagovi: [],\n    selektovaniTagovi: [],\n  };\n\n  // user = {\n  //   prezime: \"Stefanovic\",\n  //   ime: \"Djordje\",\n  //   sifra: \"djole\",\n  //   telefon: \"0213543256\",\n  //   username: \"djolecar@gmail.com\",\n  // };\n\n  componentDidMount() {\n    fetch(\"/vratiTagove\", { method: \"GET\" })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ tagovi: data });\n      });\n\n    console.log(this.props);\n  }\n\n  dodajTemu = (e) => {\n    const zaSlanje = {\n      naslov: this.state.naslov,\n      tekstPitanja: this.state.tekst,\n      telefonKorisnika: this.props.user.telefon,\n      tagoviZaFlitriranje: this.state.selektovaniTagovi,\n    };\n    try {\n      axios.post(\"http://localhost:5000/postaviPitanje\", zaSlanje);\n    } catch (err) {\n      console.log(err);\n    }\n    console.log(zaSlanje);\n  };\n\n  promenaTeksta(event) {\n    const value = event.target.value;\n\n    this.setState({\n      tekst: value,\n    });\n  }\n\n  promenaNaslova(event) {\n    const value = event.target.value;\n\n    this.setState({\n      naslov: value,\n    });\n  }\n\n  promenaTagova(selktovaniTagovi) {\n    const tagovi = selktovaniTagovi.map((item) => item.value);\n    console.log(selktovaniTagovi, tagovi);\n\n    this.setState({\n      selektovaniTagovi: tagovi,\n    });\n  }\n\n  render() {\n    return (\n      <MDBContainer className=\"mt-5\">\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <form>\n              <p className=\"h4 text-center mb-4\">Dodaj novu temu</p>\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"black-text\">\n                Naslov:\n              </label>\n              <input\n                type=\"text\"\n                id=\"subject\"\n                className=\"form-control\"\n                placeholder=\"npr. krvarenje desni...\"\n                onChange={(value) => this.promenaNaslova(value)}\n              />\n              <br />\n              <label\n                htmlFor=\"defaultFormLoginPasswordEx\"\n                className=\"black-text\"\n              >\n                Tekst:\n              </label>\n              <textarea\n                type=\"textarea\"\n                id=\"subjectText\"\n                className=\"form-control\"\n                onChange={(value) => this.promenaTeksta(value)}\n              />\n              <label className=\"black-text mt-4\">Tagovi:</label>\n\n              <div></div>\n              <Select\n                isMulti={true}\n                options={this.state.tagovi.map((name) => {\n                  return {\n                    value: name,\n                    label: name,\n                  };\n                })}\n                onChange={(value) => this.promenaTagova(value)}\n              />\n              <div className=\"text-center mt-4\">\n                <MDBBtn\n                  href=\"/forum\"\n                  color=\"indigo\"\n                  onClick={(e) => this.dodajTemu(e)}\n                >\n                  Dodaj\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, {})(FormaDodaj);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Poruke.js",["169","170"],"import React, { useEffect, useState } from 'react';\nimport { MDBNotification, MDBContainer } from 'mdbreact';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\n\nconst Poruke = (props, { vratiSvePoruke }) => {\n  const [poruke, setPoruke] = useState([]);\n  // const datumi = [];\n  const fetchData = async () => {\n    const res = await axios.get(\n      '/vratiPrivatnePoruke/' + props.match.params.telefon\n    );\n    setPoruke(res.data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // useEffect(() => {\n  //   konvertuj();\n  //   console.log(tmp);\n  // }, [poruke]);\n  // const konvertuj = () => {\n  //   poruke.forEach((p) => {\n  //     let d = new Date(Date.parse(p.poruka.vreme));\n  //     setTmp([...tmp, 'terza']);\n  //   });\n  // };\n  return (\n    <div className='terza3'>\n      <MDBContainer className='opa'>\n        {poruke &&\n          poruke.map((p) => (\n            <div>\n              {p.poruka.vreme}\n              <MDBNotification\n                show\n                fade\n                iconClassName='text-primary'\n                title={`${p.student.ime} ${p.student.prezime}`}\n                message={p.poruka.tekst}\n                // text={porukeNiz[0]}\n              />\n            </div>\n          ))}\n      </MDBContainer>\n    </div>\n  );\n};\n\nPoruke.propTypes = {\n  vratiSvePoruke: PropTypes.func.isRequired,\n};\n\nexport default connect()(Poruke);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluga.js",["171","172"],"import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { SVE_PORUKE, SVE_USLUGE } from '../../actions/types';\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBIcon,\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBadge,\n} from 'mdbreact';\n\nconst akcija = (usluga) => (dispatch) => {\n  console.log(usluga);\n  dispatch({\n    type: SVE_PORUKE,\n    payload: usluga,\n  });\n};\n\nconst Usluga = ({ user, sveUsluge, akcija }) => {\n  const [uslugaPodaci, setUslugaPodaci] = useState({\n    naziv: '',\n    cena: '',\n    opis: '',\n    username: user.username,\n  });\n\n  const { naziv, cena, opis, username } = uslugaPodaci;\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      username,\n      naziv,\n      cena,\n      opis,\n    };\n    console.log(zaSlanje);\n    const element = (\n      <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n        {opis}\n        <MDBBadge color='primary' pill>\n          {cena}\n        </MDBBadge>\n      </MDBListGroupItem>\n    );\n    ReactDOM.render(element, document.getElementById('root1'));\n\n    const res = await axios.put('/novaUsluga', zaSlanje);\n    console.log(res.data);\n    akcija(zaSlanje);\n  };\n  const onChange = (e) =>\n    setUslugaPodaci({ ...uslugaPodaci, [e.target.name]: e.target.value });\n\n  return (\n    <MDBContainer className='terza5'>\n      <MDBRow>\n        <MDBCol md='6'>\n          <form onSubmit={onSubmit}>\n            <p className='h4 text-center mb-4'>Dodaj novu uslugu</p>\n            <label htmlFor='defaultFormContactNameEx' className='grey-text'>\n              Naziv usluge\n            </label>\n            <input\n              type='text'\n              id='defaultFormContactNameEx'\n              className='form-control'\n              name='naziv'\n              value={naziv}\n              onChange={onChange}\n            />\n            <br />\n            <label htmlFor='defaultFormContactEmailEx' className='grey-text'>\n              Cena\n            </label>\n            <input\n              type='text'\n              id='defaultFormContactEmailEx'\n              className='form-control'\n              name='cena'\n              value={cena}\n              onChange={onChange}\n            />\n            <br />\n            <label htmlFor='defaultFormContactMessageEx' className='grey-text'>\n              Opis\n            </label>\n            <textarea\n              type='text'\n              id='defaultFormContactMessageEx'\n              className='form-control'\n              rows='3'\n              name='opis'\n              value={opis}\n              onChange={onChange}\n            />\n            <div className='text-center mt-4'>\n              <MDBBtn color='warning' outline type='submit'>\n                Dodaj\n                <MDBIcon far icon='paper-plane' className='ml-2' />\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n        <MDBCol md='6' className='terza6'>\n          <p className='h4  mb-4'>Lista usluga koje nudim</p>\n          <MDBListGroup className='terzinjo' style={{ width: '31rem' }}>\n            {sveUsluge.map((usl) => (\n              <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n                {usl.naziv}\n                <MDBBadge color='primary' pill>\n                  {usl.cena}\n                </MDBBadge>\n              </MDBListGroupItem>\n            ))}\n            <MDBListGroupItem\n              className='d-flex justify-content-between align-items-center'\n              id='root1'\n            >\n              <MDBBadge color='primary' pill></MDBBadge>\n            </MDBListGroupItem>\n          </MDBListGroup>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nUsluga.propTypes = {\n  user: PropTypes.object.isRequired,\n  sveUsluge: PropTypes.array.isRequired,\n  akcija: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  sveUsluge: state.dashboard.sveUsluge,\n});\n\nexport default connect(mapStateToProps, { akcija })(Usluga);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UrediProfil.js",["173","174"],"import React, { Fragment, useState } from 'react';\nimport { MDBInput, MDBBtn } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst UrediProfil = ({ user }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    sifra: '',\n    telefon: '',\n    trenutniUsername: user.username,\n  });\n  const { username, sifra, telefon, trenutniUsername } = formData;\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const zaSlanje = {\n      username,\n      sifra,\n      telefon,\n    };\n    console.log(zaSlanje);\n  };\n  const onChange = async (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <MDBInput\n          label='Promeni username'\n          outline\n          size='lg'\n          background\n          name='username'\n          value={username}\n          onChange={onChange}\n        />\n        ;\n        <MDBInput\n          label='Promeni sifru'\n          outline\n          size='lg'\n          background\n          name='sifra'\n          value={sifra}\n          onChange={onChange}\n        />\n        ;\n        <MDBInput\n          label='Promeni telefon'\n          outline\n          size='lg'\n          background\n          name='telefon'\n          value={telefon}\n          onChange={onChange}\n        />\n        ;\n        <MDBBtn color='success' size='lg' type='submit'>\n          Sacuvaj izmene\n        </MDBBtn>\n      </form>\n    </Fragment>\n  );\n};\nUrediProfil.propTypes = {\n  user: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, null)(UrediProfil);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/reducers/dashboard.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/PrikaziTemu.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Dashboard.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Forum.js",["175"],"import React, { Fragment, Component } from \"react\";\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\nimport Dashboar from \"../forum/Dashboard\";\n\nclass Forum extends Component {\n  state = { pretraga: \"\" };\n\n  promeniPretragu(value) {\n    this.setState({\n      pretraga: value,\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* <NavbarKorisnik promeniPretragu={this.promeniPretragu.bind(this)} /> */}\n        {/* <br></br> */}\n        <Dashboar pretraga={this.state.pretraga} />\n      </Fragment>\n    );\n  }\n}\n\nForum.propTypes = {};\n\nexport default Forum;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/forum/Tema.js",["176"],"import React, { Fragment } from \"react\";\nimport PrikaziTemu from \"./PrikaziTemu\";\nimport NavbarKorisnik from \"../dashboard/NavbarKorisnik\";\n\nconst OtvoriTemu = (props) => {\n  return (\n    <Fragment>\n      {/* <NavbarKorisnik /> */}\n      {/* <br></br> */}\n      <PrikaziTemu data={props} />\n    </Fragment>\n  );\n};\n\nOtvoriTemu.propTypes = {};\n\nexport default OtvoriTemu;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Komentari.js",["177","178","179"],"import React, { useState, useEffect } from 'react';\nimport { MDBListGroup, MDBListGroupItem, MDBContainer } from 'mdbreact';\nimport axios from 'axios';\n\nconst Komentari = (props) => {\n  const [komentari, setKomentari] = useState([]);\n  useEffect(async () => {\n    const res = await axios.get(\n      'http://localhost:5000/vratiKomentareOZubaru/' +\n        props.match.params.telefon\n    );\n    setKomentari(res.data);\n  }, []);\n  return (\n    <div className='comm'>\n      <MDBListGroup style={{ width: '25rem' }}>\n        {komentari.map((k) => (\n          <MDBListGroupItem>\n            <div className='d-flex w-100 justify-content-between'>\n              <h5 className='mb-1'>Komentarisao:{k.ime}</h5>\n              <small>3 days ago</small>\n            </div>\n            <p className='mb-1 terrr'>{k.komentar}</p>\n            <small style={{ color: 'green' }}>Ocena:{k.ocena}</small>\n          </MDBListGroupItem>\n        ))}\n      </MDBListGroup>\n    </div>\n  );\n};\n\nexport default Komentari;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZubarPogled.js",["180","181","182","183","184"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  MDBIcon,\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBContainer,\n  MDBBadge,\n  MDBBtn,\n} from 'mdbreact';\n\nconst ZubarPogled = (props) => {\n  const [usluge, setUsluge] = useState([]);\n  useEffect(async () => {\n    const res = await axios.get(\n      'http://localhost:5000/vratiUslugeZubara/' + props.match.params.username\n    );\n    setUsluge(res.data);\n    const dugme = document.getElementById('dugme');\n    const res1 = await axios.get(\n      `/daLiPreporucujem/${props.match.params.usernameTrenutnog}/${props.match.params.username}`\n    );\n    dugme.disabled = res1.data;\n  }, []);\n  const klik = async () => {\n    const res = await axios.put('http://localhost:5000/preporuciZubara', {\n      usernameZubaraTrenutnog: props.match.params.usernameTrenutnog,\n      usernameZubaraZaPreporuku: props.match.params.username,\n    });\n    window.location.reload();\n  };\n  return (\n    <div className='pogled'>\n      <div className='gore'>\n        <h2>{props.match.params.username}</h2>\n        <MDBBtn id='dugme' color='success' onClick={klik}>\n          Preporuci\n        </MDBBtn>\n      </div>\n      <div className='dole'>\n        <h2>Usluge koje nudim:</h2>\n\n        <MDBListGroup style={{ width: '26rem' }}>\n          {usluge.map((u) => (\n            <MDBListGroupItem className='d-flex justify-content-between align-items-center'>\n              {u.naziv}{' '}\n              <MDBBadge color='primary' pill>\n                {u.cena}\n              </MDBBadge>\n            </MDBListGroupItem>\n          ))}\n        </MDBListGroup>\n      </div>\n    </div>\n  );\n};\n\nexport default ZubarPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/TerminiZubar.js",["185","186","187","188"],"import React, { Component } from 'react';\nimport { DayPilotScheduler, DayPilot } from 'daypilot-pro-react';\nimport axios from 'axios';\nimport { MDBIcon, MDBBtn } from 'mdbreact';\nimport nextId from 'react-id-generator';\n\nclass TerminiZubar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usluge: [],\n      terminiNeodobreni: [],\n      ime1: 'Danilo',\n      ime2: 'Marija',\n      startDate: '2021-01-23',\n      days: 31,\n      scale: 'Day',\n      eventHeight: 45,\n      cellWidth: 40,\n      timeHeaders: [{ groupBy: 'Month' }, { groupBy: 'Day', format: 'd' }],\n      cellWidthSpec: 'Auto',\n      resources: [\n        // { name: 'Resource B', id: 'B' },\n        // { name: 'Resource C', id: 'C' },\n        // { name: 'Resource D', id: 'D' },\n        // { name: 'Resource E', id: 'E' },\n        // { name: 'Resource F', id: 'F' },\n        // { name: 'Resource G', id: 'G' },\n      ],\n      events: [\n        // {\n        //   id: 1,\n        //   text: 'Event 1',\n        //   start: '2021-10-01',\n        //   end: '2021-10-01',\n        //   resource: 'A0',\n        // },\n      ],\n    };\n  }\n  componentDidMount() {\n    fetch('/vratiTermineZubaraOdobrene/' + this.props.match.params.telefon, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) =>\n        data.forEach((t) => {\n          let zaTabelu = {\n            id: nextId(),\n            //ovde mitke da mi vrati i ime korisnika koji je potvrdio termin\n            text: t.ime,\n            start: t.datum,\n            end: t.datum,\n            resource: t.imeUsluge,\n            backColor: '#ff2626',\n          };\n          this.setState((state) => ({\n            events: [...state.events, zaTabelu],\n          }));\n        })\n      );\n    fetch(`/vratiTermineZubaraNeOdobrene/${this.props.match.params.telefon}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        this.setState({ terminiNeodobreni: data });\n      });\n\n    fetch(`/vratiUslugeZubara/${this.props.match.params.username}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ usluge: data });\n        data.forEach((d, index) => {\n          let dodaj = { name: d.naziv, id: d.naziv };\n          this.setState((state) => ({\n            resources: [...state.resources, dodaj],\n          }));\n        });\n      });\n  }\n  brisi(vrednost) {\n    let div = document.querySelector('.terzar' + vrednost);\n    div.remove();\n  }\n  async funkcija(ind) {\n    let obj = {\n      datum: this.state.terminiNeodobreni[ind].datum,\n      telefon: this.props.match.params.telefon,\n    };\n    console.log(obj);\n    const res = await axios.put('/potvrdiTermin', obj);\n    // console.log(res);\n    window.location.reload();\n  }\n\n  render() {\n    var { ...config } = this.state;\n    return (\n      <div>\n        <DayPilotScheduler\n          {...config}\n          onEventMoved={(args) => {\n            console.log(\n              'Event moved: ',\n              args.e.data.id,\n              args.newStart,\n              args.newEnd,\n              args.newResource\n            );\n          }}\n          onTimeRangeSelected={(args) => {\n            DayPilot.Modal.prompt('Upisite naziv korisnika', '').then(\n              (modal) => {\n                this.scheduler.clearSelection();\n                if (!modal.result) {\n                  return;\n                }\n                this.scheduler.events.add({\n                  id: DayPilot.guid(),\n                  text: modal.result,\n                  start: args.start,\n                  end: args.end,\n                  resource: args.resource,\n                });\n                console.log(modal.result);\n                var datum = args.start.toString('yyyy-MM-dd');\n                var telefon = this.props.match.params.telefon;\n              }\n            );\n          }}\n          onEventMoved={(args) =>\n            this.scheduler.message(\n              'Promenili ste datum pregleda: ' + args.e.data.text\n            )\n          }\n          ref={(component) => {\n            this.scheduler = component && component.control;\n          }}\n        />\n        <h3 style={{ color: 'black', marginTop: '20px' }}>\n          Termini na cekanju\n        </h3>\n        {this.state.terminiNeodobreni &&\n          this.state.terminiNeodobreni.map((t, index) => (\n            <div className='terzica'>\n              <div className={`terzar${index}`}>\n                {t.datum}&nbsp;&nbsp;&nbsp;\n                <MDBIcon icon='arrow-right' />\n                &nbsp; Ime: &nbsp;\n                {t.ime + ','}&nbsp;\n                {'Opis:'} &nbsp;{t.imeUsluge}&nbsp; &nbsp;\n                <MDBBtn\n                  color='success'\n                  size='sm'\n                  onClick={() => this.funkcija(index)}\n                >\n                  Potvrdi\n                </MDBBtn>\n                <MDBBtn\n                  color='danger'\n                  size='sm'\n                  onClick={() => this.brisi(index)}\n                >\n                  Odbij\n                </MDBBtn>\n                &nbsp;\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default TerminiZubar;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/NavbarKorisnik.js",["189","190","191","192","193","194"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBContainer,\n  MDBFormInline,\n  MDBBtn,\n} from \"mdbreact\";\nimport { SVI_KORISNICI, SVI_ZUBARI, SVI_STUDENTI } from \"../../actions/types\";\nimport PropTypes from \"prop-types\";\n\nclass Navbarkorisnik extends Component {\n  state = {\n    vrednost: \"\",\n  };\n\n  onChange = (e) => {\n    this.setState({ ...this.state, vrednost: e.target.value });\n    console.log(this.state);\n  };\n\n  pretraziUslugu() {\n    this.props.promeniPretragu(this.state.vrednost);\n  }\n\n  // klik = async () => {\n  //   const { dispatch } = this.props;\n\n  //   const tmp =\n  //     this.state.vrednost.charAt(0).toUpperCase() +\n  //     this.state.vrednost.slice(1);\n\n  //   const res = await axios.get(\"/sviZubari\");\n  //   const niz = res.data.filter((z) => z.ime === tmp);\n\n  //   dispatch({\n  //     type: SVI_ZUBARI,\n  //     payload: niz,\n  //   });\n\n  //   const res1 = await axios.get(\"/sviKorisnici\");\n  //   const niz1 = res1.data.filter((k) => k.ime === tmp);\n\n  //   dispatch({\n  //     type: SVI_KORISNICI,\n  //     payload: niz1,\n  //   });\n  //   const res2 = await axios.get(\"/sviStudenti\");\n  //   const niz2 = res2.data.filter((s) => s.ime === tmp);\n\n  //   dispatch({\n  //     type: SVI_STUDENTI,\n  //     payload: niz2,\n  //   });\n  // };\n\n  render() {\n    return (\n      <MDBContainer>\n        <MDBNavbar\n          color=\"light-blue\"\n          dark\n          expand=\"md\"\n          style={{ marginTop: \"20px\" }}\n        >\n          <MDBNavbarBrand>\n            <strong className=\"white-text\">\n              {this.props.ime && this.props.ime}\n            </strong>\n          </MDBNavbarBrand>\n          <MDBNavbarNav left>\n            {/* <MDBNavItem>\n                <MDBBtn href=\"/#\">\n                  <i class=\"fa fa-fw fa-home\"></i> Home\n                </MDBBtn>\n              </MDBNavItem> */}\n            <MDBNavItem>\n              <MDBFormInline waves>\n                <div className=\"md-form my-0\">\n                  <input\n                    className=\"form-control mr-sm-2\"\n                    type=\"text\"\n                    placeholder=\"Pretraga...\"\n                    aria-label=\"Search\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </MDBFormInline>\n            </MDBNavItem>\n            {/* <MDBNavItem>\n                <MDBBtn\n                  color=\"light-blue\"\n                  className=\"dugmence\"\n                  onClick={() => this.klik(this.state.vrednost)}\n                >\n                  Pretrazi forum\n                </MDBBtn>\n              </MDBNavItem> */}\n            <MDBNavItem>\n              <MDBBtn\n                color=\"light-blue\"\n                className=\"dugmence\"\n                onClick={() => this.pretraziUslugu()}\n              >\n                Pretrazi usluge\n              </MDBBtn>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-\" to=\"/\">\n                Odjavi se\n              </MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBNavbar>\n      </MDBContainer>\n    );\n  }\n}\n\nNavbarkorisnik.propTypes = {\n  promeniPretragu: PropTypes.func.isRequired,\n};\n\nexport default connect(null, null)(Navbarkorisnik);\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/KorisnikPogled.js",["195"],"import React, { useState, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\n\nconst KorisnikPogled = (props) => {\n  const [pitanja, setPitanja] = useState([]);\n  useEffect(() => {\n    fetch(`/pitanjaPostavioKorisnik/${props.match.params.telefonK}`, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((data) => setPitanja(data))\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n  return (\n    <div className='comm1'>\n      <h1>Pitanja koje je korisnik postavljao</h1>\n      {pitanja.map((p) => (\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\n          <MDBCardBody>\n            <MDBCardTitle>{p.naslov + '?'}</MDBCardTitle>\n            <MDBCardText>{p.tekstPitanja}</MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      ))}\n    </div>\n  );\n};\n\nexport default KorisnikPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/StudentPogled.js",["196"],"import React, { useState, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\n\nconst StudentPogled = (props) => {\n  const [odgovori, setOdgovori] = useState([]);\n  useEffect(() => {\n    fetch(`/pitanjaOdgovorioStudent/${props.match.params.telefonS}`)\n      .then((res) => res.json())\n      .then((data) => setOdgovori(data))\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n  return (\n    <div className='comm1'>\n      <h1 style={{ color: 'blue' }}>Odgovori na pitanja</h1>\n      {odgovori.map((o) => (\n        <MDBCard style={{ width: '39rem', marginTop: '2rem' }}>\n          <MDBCardBody>\n            <MDBCardTitle>{o.pitanje + '?'}</MDBCardTitle>\n            <p\n              style={{\n                display: 'inline',\n                color: 'blue',\n                fontWeight: '600',\n                fontFamily: 'arial',\n              }}\n            >{`Pitanje je postavio:`}</p>\n            <p style={{ display: 'inline', marginLeft: '10px', color: 'red' }}>\n              {o.ime}\n            </p>\n            <MDBCardText style={{ color: 'blue' }}>\n              <p\n                style={{\n                  display: 'inline',\n                  color: 'blue',\n                  fontWeight: '600',\n                  fontFamily: 'arial',\n                }}\n              >{`Odgovor ovog korisnika je:`}</p>\n              <p\n                style={{ display: 'inline', marginLeft: '10px', color: 'red' }}\n              >\n                {o.odgovor}\n              </p>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      ))}\n    </div>\n  );\n};\n\nexport default StudentPogled;\n","/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/ZahteviStudenata.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Notification.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/Usluge.js",[],"/home/djolestef/Desktop/Faks/Baze/Neo4J/NBP_NEO4J/client/src/components/dashboard/UslugeDashboard.js",["197"],"import React, { Component } from \"react\";\nimport { MDBContainer, MDBRow, MDBCard, MDBCardBody } from \"mdbreact\";\nimport axios from \"axios\";\n\nclass Dashboar extends Component {\n  render() {\n    return (\n      <MDBContainer>\n        <h3 style={{ display: \"flex\", justifyContent: \"center\" }}>\n          Usluge nasih stomatologa\n        </h3>\n        <h5 className=\"mb-4\" style={{ marginLeft: \"150px\" }}>\n          Ovde mozete pronaci i pretraziti usluge i cene koje nude stomatolozi\n          registrovani na nasem sajtu\n        </h5>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ width: \"70%\" }}>\n            {this.props.usluge.map((el, index) => (\n              <MDBCard\n                className=\"my-3 px-5 pt-2 pb-2\"\n                style={{ fontWeight: 300, maxWidth: 700, minWidth: 500 }}\n              >\n                <MDBCardBody className=\"py-0\">\n                  <MDBRow>\n                    <div className=\"excerpt\">\n                      <div className=\"brief\">\n                        <a href={\"/tema/\" + el.pitanje.id} className=\"name\">\n                          {el.pitanje.naslov} -\n                        </a>{\" \"}\n                        {el.korisnik.ime} {el.korisnik.prezime}\n                      </div>\n                      <div className=\"added-text\">\n                        {el.pitanje.tekstPitanja}\n                      </div>\n                      <div className=\"feed-footer\">\n                        <a href=\"#!\" className=\"like\">\n                          <span>7 likes</span>\n                        </a>\n                      </div>\n                    </div>\n                  </MDBRow>\n                </MDBCardBody>\n              </MDBCard>\n            ))}\n          </div>\n        </div>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default Dashboar;\n",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"206","line":1,"column":37,"nodeType":"204","messageId":"205","endLine":1,"endColumn":46},{"ruleId":"202","severity":1,"message":"207","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"208","line":2,"column":16,"nodeType":"204","messageId":"205","endLine":2,"endColumn":24},{"ruleId":"202","severity":1,"message":"209","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"207","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"210","line":20,"column":9,"nodeType":"204","messageId":"205","endLine":20,"endColumn":16},{"ruleId":"202","severity":1,"message":"211","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":9,"column":1,"nodeType":"214","messageId":"215","endLine":11,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":12,"column":1,"nodeType":"214","messageId":"215","endLine":14,"endColumn":2},{"ruleId":"202","severity":1,"message":"207","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"210","line":15,"column":9,"nodeType":"204","messageId":"205","endLine":15,"endColumn":16},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":22},{"ruleId":"202","severity":1,"message":"217","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":19},{"ruleId":"202","severity":1,"message":"218","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":28},{"ruleId":"219","severity":1,"message":"220","line":19,"column":6,"nodeType":"221","endLine":19,"endColumn":8,"suggestions":"222"},{"ruleId":"202","severity":1,"message":"206","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"223","line":6,"column":22,"nodeType":"204","messageId":"205","endLine":6,"endColumn":32},{"ruleId":"202","severity":1,"message":"211","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":13},{"ruleId":"202","severity":1,"message":"224","line":14,"column":37,"nodeType":"204","messageId":"205","endLine":14,"endColumn":53},{"ruleId":"202","severity":1,"message":"216","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":22},{"ruleId":"202","severity":1,"message":"216","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":22},{"ruleId":"202","severity":1,"message":"225","line":2,"column":42,"nodeType":"204","messageId":"205","endLine":2,"endColumn":54},{"ruleId":"219","severity":1,"message":"226","line":7,"column":13,"nodeType":"227","endLine":13,"endColumn":4},{"ruleId":"219","severity":1,"message":"228","line":13,"column":6,"nodeType":"221","endLine":13,"endColumn":8,"suggestions":"229"},{"ruleId":"202","severity":1,"message":"230","line":4,"column":3,"nodeType":"204","messageId":"205","endLine":4,"endColumn":10},{"ruleId":"202","severity":1,"message":"225","line":7,"column":3,"nodeType":"204","messageId":"205","endLine":7,"endColumn":15},{"ruleId":"219","severity":1,"message":"226","line":14,"column":13,"nodeType":"227","endLine":24,"endColumn":4},{"ruleId":"219","severity":1,"message":"231","line":24,"column":6,"nodeType":"221","endLine":24,"endColumn":8,"suggestions":"232"},{"ruleId":"202","severity":1,"message":"233","line":26,"column":11,"nodeType":"204","messageId":"205","endLine":26,"endColumn":14},{"ruleId":"202","severity":1,"message":"233","line":96,"column":11,"nodeType":"204","messageId":"205","endLine":96,"endColumn":14},{"ruleId":"202","severity":1,"message":"234","line":131,"column":21,"nodeType":"204","messageId":"205","endLine":131,"endColumn":26},{"ruleId":"202","severity":1,"message":"235","line":132,"column":21,"nodeType":"204","messageId":"205","endLine":132,"endColumn":28},{"ruleId":"236","severity":1,"message":"237","line":136,"column":11,"nodeType":"238","endLine":140,"endColumn":12},{"ruleId":"202","severity":1,"message":"211","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"239","line":10,"column":3,"nodeType":"204","messageId":"205","endLine":10,"endColumn":19},{"ruleId":"202","severity":1,"message":"240","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":14},{"ruleId":"202","severity":1,"message":"241","line":16,"column":10,"nodeType":"204","messageId":"205","endLine":16,"endColumn":23},{"ruleId":"202","severity":1,"message":"242","line":16,"column":25,"nodeType":"204","messageId":"205","endLine":16,"endColumn":35},{"ruleId":"202","severity":1,"message":"243","line":16,"column":37,"nodeType":"204","messageId":"205","endLine":16,"endColumn":49},{"ruleId":"219","severity":1,"message":"244","line":15,"column":6,"nodeType":"221","endLine":15,"endColumn":8,"suggestions":"245"},{"ruleId":"219","severity":1,"message":"246","line":13,"column":6,"nodeType":"221","endLine":13,"endColumn":8,"suggestions":"247"},{"ruleId":"202","severity":1,"message":"211","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":13},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'json' is defined but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'NavbarKorisnik' is defined but never used.","'MultiSelect' is defined but never used.","'bindActionCreators' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'SVE_USLUGE' is defined but never used.","'trenutniUsername' is assigned a value but never used.","'MDBContainer' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.match.params.telefon'. Either include it or remove the dependency array.",["251"],"'MDBIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.username' and 'props.match.params.usernameTrenutnog'. Either include them or remove the dependency array.",["252"],"'res' is assigned a value but never used.","'datum' is assigned a value but never used.","'telefon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'SVI_KORISNICI' is defined but never used.","'SVI_ZUBARI' is defined but never used.","'SVI_STUDENTI' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.telefonK'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'props.match.params.telefonS'. Either include it or remove the dependency array.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [fetchData]",{"range":"265","text":"266"},"Update the dependencies array to be: [props.match.params.telefon]",{"range":"267","text":"268"},"Update the dependencies array to be: [props.match.params.username, props.match.params.usernameTrenutnog]",{"range":"269","text":"270"},"Update the dependencies array to be: [props.match.params.telefonK]",{"range":"271","text":"272"},"Update the dependencies array to be: [props.match.params.telefonS]",{"range":"273","text":"274"},[578,580],"[fetchData]",[423,425],"[props.match.params.telefon]",[667,669],"[props.match.params.username, props.match.params.usernameTrenutnog]",[474,476],"[props.match.params.telefonK]",[446,448],"[props.match.params.telefonS]"]